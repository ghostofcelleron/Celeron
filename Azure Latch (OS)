local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()
loadstring(game:HttpGet("https://pastebin.com/raw/LEBgs3Ki",true))()

local win = ui:Create({
    Name = "Celeron's GUI (Azure Latch)",
    ThemeColor = Color3.fromRGB(18, 18, 18),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Blatant")
local maintab2 = win:Tab("Silent")
local funtab = win:Tab("Movesets")
local emotetab = win:Tab("Emotes")
local teleporttab = win:Tab("Teleports")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
funtab:Label("Custom Movesets, Not Actual Unlocks!")
emotetab:Label("The Sounds Are Client Sided, The Emotes Are Visible!")
teleporttab:Label("Map Teleports, No Prerequisites To Use!")
misctab:Label("Miscellaneous Features, They Give No Advantages In-Game!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

helptab:Button("Show Keybinds", function()
    local StarterGui = game:GetService("StarterGui")

    StarterGui:SetCore("SendNotification", {
        Title = "Keybinds",
        Text = "Z = Auto-Dribble\nX = Move One\nC = Move Two",
        Duration = 4
    })

    task.delay(0.5, function()
        StarterGui:SetCore("SendNotification", {
            Title = "Keybinds",
            Text = "V = Move Three\nN = Move Four\nM = Move Five.",
            Duration = 4
        })
    end)
end)

maintab2:Label("Notification Suppression: Useful When Streaming.")

maintab2:Button("Suppress Notifications", function()
    _G.suppressNotifs = not (_G.suppressNotifs or false)
    local StarterGui = game:GetService("StarterGui")

    StarterGui:SetCore("SendNotification", {
        Title = "Notifications",
        Text = _G.suppressNotifs and "Suppressed." or "Un-Suppressed.",
        Duration = 1
    })
end)

local spawns = {}
for _, obj in ipairs(workspace:GetDescendants()) do
	if obj:IsA("SpawnLocation") then
		table.insert(spawns, obj)
	end
end

maintab:Button("Metavision", function()
loadstring(game:HttpGet("https://pastebin.com/raw/FVgs7bQw"))()
end)

maintab:Button("Auto Goal", function()
    _G.AUTO_GOAL = not _G.AUTO_GOAL
    if _G.AUTO_GOAL then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Auto Goal",
            Text = "Enabled.",
            Duration = 1
        })
		
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local MapFolder = workspace:WaitForChild("map")
local AGoal = MapFolder:WaitForChild("Agoal")
local BGoal = MapFolder:WaitForChild("Bgoal")

local LocalPlayer = Players.LocalPlayer

local function IsInGame()
    local LocalCharacter = LocalPlayer.Character
    if not LocalCharacter then return false end

    local StateFolder = LocalCharacter:FindFirstChild("state")
    if not StateFolder then return false end

    local InGameValue = StateFolder:FindFirstChild("ingame")
    if not InGameValue then return false end

    return InGameValue.Value
end

local function DisableCollisionBoxes()
    local MapFolder = workspace:FindFirstChild("map")
    if not MapFolder then return end

    local GkBarriar = MapFolder:FindFirstChild("gkbarriar")
    local AGoal = MapFolder:FindFirstChild("Agoal")
    local BGoal = MapFolder:FindFirstChild("Bgoal")

    if GkBarriar then
        local ABarriar = GkBarriar:FindFirstChild("A")
        local BBarriar = GkBarriar:FindFirstChild("B")

        if ABarriar then ABarriar.CanCollide = false end
        if BBarriar then BBarriar.CanCollide = false end
    end

    if AGoal then AGoal.CanCollide = false end
    if BGoal then BGoal.CanCollide = false end
end

local function StealBall()
    local LocalCharacter = LocalPlayer.Character
    local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
    local Football = workspace.Terrain:FindFirstChild("Ball")

    if LocalHumanoidRootPart and Football then
        LocalHumanoidRootPart.CFrame = CFrame.new(Football.Position.X, 0, Football.Position.Z)
    end
    
    for _, OtherPlayer in pairs(Players:GetPlayers()) do
        if OtherPlayer ~= LocalPlayer then
            local OtherCharacter = OtherPlayer.Character
            local OtherFootball = OtherCharacter and OtherCharacter:FindFirstChild("Ball")
            local OtherHumanoidRootPart = OtherCharacter and OtherCharacter:FindFirstChild("HumanoidRootPart")

            if OtherFootball and OtherHumanoidRootPart and LocalHumanoidRootPart then
                LocalHumanoidRootPart.CFrame = OtherFootball.CFrame

					local args = {
						buffer.fromstring("\022\001"),
						{
							{
								"tackle"
							}
						}
					}
					game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args))
            end
        end
    end
end

local function HasBall()
    local LocalCharacter = LocalPlayer.Character
    local Football = LocalCharacter and LocalCharacter:FindFirstChild("Ball")
    return Football ~= nil
end

coroutine.resume(coroutine.create(function()
    RunService.RenderStepped:Connect(function()
        if not _G.AUTO_GOAL then return end
        pcall(function()
            if not IsInGame() then return end
            DisableCollisionBoxes()
            StealBall()
            if HasBall() then
                local LocalCharacter = LocalPlayer.Character
                local LocalRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
                local Goal = LocalPlayer.Team.Name == "A" and BGoal or AGoal

                if LocalRootPart and Goal then
                    LocalRootPart.CFrame = Goal.CFrame

					wait(0.185)

					local args = {
						buffer.fromstring("\022\001"),
						{
							{
								"kick",
								20,
								false,
								vector.create(0, 1, 0)
							}
						}
					}
					game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args))


                end
            end
        end)
    end)
end))
    else
        game.StarterGui:SetCore("SendNotification", {
            Title = "Auto Goal",
            Text = "Disabled.",
            Duration = 1
        })
    end
end)

maintab:Button("Always Ball", function()
_G.ALWAYS_BALL_ACTIVE = not _G.ALWAYS_BALL_ACTIVE
if _G.ALWAYS_BALL_ACTIVE then
    game.StarterGui:SetCore("SendNotification", {
        Title = "Always Ball",
        Text = "Enabled.",
        Duration = 1
    })

    workspace.Gravity = 0

    spawn(function()
        while _G.ALWAYS_BALL_ACTIVE do
            local LocalPlayer = game.Players.LocalPlayer
            local LocalCharacter = LocalPlayer.Character
            local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
            local Football = workspace.Terrain:FindFirstChild("Ball")
            
            if LocalHumanoidRootPart and Football then
                LocalHumanoidRootPart.CFrame = CFrame.new(Football.Position)
            end

            for _, OtherPlayer in pairs(game.Players:GetPlayers()) do
                if OtherPlayer ~= LocalPlayer then
                    local OtherCharacter = OtherPlayer.Character
                    local OtherFootball = OtherCharacter and OtherCharacter:FindFirstChild("Ball")
                    local OtherHumanoidRootPart = OtherCharacter and OtherCharacter:FindFirstChild("HumanoidRootPart")

                    if OtherFootball and OtherHumanoidRootPart and LocalHumanoidRootPart then
                        LocalHumanoidRootPart.CFrame = OtherFootball.CFrame

						local args = {
							buffer.fromstring("\022\001"),
							{
								{
									"tackle"
								}
							}
						}
						game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args))

                    end
                end
            end
            
            task.wait(0.1)
        end
    end)
else
    game.StarterGui:SetCore("SendNotification", {
        Title = "Always Ball",
        Text = "Disabled.",
        Duration = 1
    })

    workspace.Gravity = 196.2
end
end)

maintab:Button("Get Flow (Req. Ball)", function()
local player = game:GetService("Players").LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local root = char:WaitForChild("HumanoidRootPart")
local original = root.CFrame

if #spawns > 0 then
	root.CFrame = spawns[math.random(#spawns)].CFrame + Vector3.new(0, 3, 0)
end
wait(0.67)
task.spawn(function()
	local remote = game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable")
	local flow = workspace:WaitForChild("characters"):WaitForChild(player.Name):WaitForChild("state"):WaitForChild("flow")
	while flow.Value < 100 do
		remote:FireServer(buffer.fromstring("\022\001"), { { "kick", 1, false, vector.create(0, 1, 0) } })
		task.wait(0.01)
	end
	wait(0.9)
	root.CFrame = original
end)
end)

local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local starterGui = game:GetService("StarterGui")
local player = game.Players.LocalPlayer

_G.ForwardRushEnabled = false
_G.SideDashEnabled = false
_G._rushing = false
_G._sideDashing = false
_G._dashBindsSetup = false

local character, humanoid, rootPart

local function updateCharacter()
	character = player.Character or player.CharacterAdded:Wait()
	humanoid = character:WaitForChild("Humanoid")
	rootPart = character:WaitForChild("HumanoidRootPart")
end

updateCharacter()
player.CharacterAdded:Connect(updateCharacter)

local function notify(title, text)
	starterGui:SetCore("SendNotification", {
		Title = title,
		Text = text,
		Duration = 2
	})
end

local function safeUnbind(id, flag)
	runService:UnbindFromRenderStep(id)
	_G[flag] = false
end

local function forwardRush()
	if _G._rushing or not _G.ForwardRushEnabled or not humanoid or not rootPart then return end
	_G._rushing = true

	local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
	local animation = Instance.new("Animation")
	animation.AnimationId = "rbxassetid://79394729551302"
	local animationTrack = animator:LoadAnimation(animation)
	animationTrack:Play()

	task.delay(0.05, function()
		if animationTrack.IsPlaying then
			local sound = Instance.new("Sound")
			sound.SoundId = "rbxassetid://105267293181745"
			sound.Parent = rootPart
			sound:Play()
			sound.Ended:Connect(function() sound:Destroy() end)
		end
	end)

	local startPos = rootPart.Position
	local endPos = startPos + rootPart.CFrame.LookVector * 45
	local duration, elapsed = 0.5, 0
	local dashId = "ForwardRush_" .. tostring(os.clock())

	runService:BindToRenderStep(dashId, Enum.RenderPriority.Character.Value, function(dt)
		if not rootPart or not rootPart.Parent then
			safeUnbind(dashId, "_rushing")
			return
		end

		elapsed += dt
		local alpha = math.clamp(elapsed / duration, 0, 1)
		local newPos = startPos:Lerp(endPos, alpha)
		rootPart.CFrame = CFrame.new(newPos, newPos + rootPart.CFrame.LookVector)

		if alpha >= 1 then
			safeUnbind(dashId, "_rushing")
		end
	end)
end

local function sideDash(direction)
	if _G._sideDashing or not _G.SideDashEnabled or not humanoid or not rootPart then return end
	_G._sideDashing = true

	local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
	local animation = Instance.new("Animation")
	animation.AnimationId = direction == "right" and "rbxassetid://114016332539655" or "rbxassetid://100207093237932"
	local animationTrack = animator:LoadAnimation(animation)
	animationTrack:Play()

	local sound = Instance.new("Sound")
	sound.SoundId = "rbxassetid://71212694698006"
	sound.Parent = rootPart
	sound:Play()
	sound.Ended:Connect(function() sound:Destroy() end)

	local offset = rootPart.CFrame.RightVector * (direction == "right" and 25 or -25)
	local startPos = rootPart.Position
	local endPos = startPos + offset
	local duration, elapsed = 0.55, 0
	local dashId = "SideDash_" .. tostring(os.clock())

	runService:BindToRenderStep(dashId, Enum.RenderPriority.Character.Value, function(dt)
		if not rootPart or not rootPart.Parent then
			safeUnbind(dashId, "_sideDashing")
			return
		end

		elapsed += dt
		local alpha = math.clamp(elapsed / duration, 0, 1)
		local newPos = startPos:Lerp(endPos, alpha)
		rootPart.CFrame = CFrame.new(newPos, newPos + rootPart.CFrame.LookVector)

		if alpha >= 1 then
			safeUnbind(dashId, "_sideDashing")
		end
	end)
end

maintab:Button("No Rush Cooldown", function()
	_G.ForwardRushEnabled = not _G.ForwardRushEnabled
	notify("No Rush CD", _G.ForwardRushEnabled and "Enabled." or "Disabled.")
end)

maintab:Button("No Side Dash Cooldown", function()
	_G.SideDashEnabled = not _G.SideDashEnabled
	notify("No Side Dash CD", _G.SideDashEnabled and "Enabled." or "Disabled.")
end)

if not _G._dashBindsSetup then
	_G._dashBindsSetup = true

	userInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end

		if input.KeyCode == Enum.KeyCode.F then
			forwardRush()
		elseif input.KeyCode == Enum.KeyCode.Q then
			local isA = userInputService:IsKeyDown(Enum.KeyCode.A)
			local isD = userInputService:IsKeyDown(Enum.KeyCode.D)
			if isD then sideDash("right") elseif isA then sideDash("left") end
		end
	end)
end

local VirtualInputManager = game:GetService("VirtualInputManager")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ContentProvider = game:GetService("ContentProvider")

local isClicking = false
local isEnabled = false

local function preloadAssets()
    local assetsToPreload = {}
    ContentProvider:PreloadAsync(assetsToPreload)
end

local function emulateClickAtMousePosition()
    local mouseLocation = UserInputService:GetMouseLocation()
    local x, y = mouseLocation.X, mouseLocation.Y
    VirtualInputManager:SendMouseButtonEvent(x, y, 0, true, game, 1)
    VirtualInputManager:SendMouseButtonEvent(x, y, 0, false, game, 1)
end

local function teleportToBall()
    local player = Players.LocalPlayer
    local character = player.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    local football = workspace.Terrain:FindFirstChild("Ball")

    if humanoidRootPart and football then
        humanoidRootPart.CFrame = CFrame.new(football.Position)
    end

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer.Name ~= player.Name then
            local otherCharacter = otherPlayer.Character
            local otherFootball = otherCharacter and otherCharacter:FindFirstChild("Ball")
            local otherHumanoidRootPart = otherCharacter and otherCharacter:FindFirstChild("HumanoidRootPart")

            if otherFootball and otherHumanoidRootPart and humanoidRootPart then
                humanoidRootPart.CFrame = otherFootball.CFrame
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)
            end
        end
    end
end

maintab:Button("Steal Ball", function()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer

local function HasBall()
    local LocalCharacter = LocalPlayer.Character
    local Football = LocalCharacter and LocalCharacter:FindFirstChild("Ball")
    return Football ~= nil
end

local function StealBall()
    while not HasBall() do
        local LocalCharacter = LocalPlayer.Character
        local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
        local Football = workspace.Terrain:FindFirstChild("Ball")

        if LocalHumanoidRootPart and Football then
            LocalHumanoidRootPart.CFrame = CFrame.new(Football.Position)
        end

        for _, OtherPlayer in pairs(Players:GetPlayers()) do
            if OtherPlayer ~= LocalPlayer then
                local OtherCharacter = OtherPlayer.Character
                local OtherFootball = OtherCharacter and OtherCharacter:FindFirstChild("Ball")
                local OtherHumanoidRootPart = OtherCharacter and OtherCharacter:FindFirstChild("HumanoidRootPart")

                if OtherFootball and OtherHumanoidRootPart and LocalHumanoidRootPart then
                    LocalHumanoidRootPart.CFrame = OtherFootball.CFrame

					local args = {
						buffer.fromstring("\022\001"),
							{
								{
								"tackle"
								}
							}
						}
					game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args))

                end
            end
        end
        task.wait(0.2)
    end
end

StealBall()
end)

maintab:Button("Bring Ball", function()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer

local function HasBall()
    local LocalCharacter = LocalPlayer.Character
    local Football = LocalCharacter and LocalCharacter:FindFirstChild("Ball")
    return Football ~= nil
end

local function StealBall()
    while not HasBall() do
        local LocalCharacter = LocalPlayer.Character
        local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
        local Football = workspace.Terrain:FindFirstChild("Ball")

        if LocalHumanoidRootPart and Football then
            LocalHumanoidRootPart.CFrame = CFrame.new(Football.Position)
        end

        for _, OtherPlayer in pairs(Players:GetPlayers()) do
            if OtherPlayer ~= LocalPlayer then
                local OtherCharacter = OtherPlayer.Character
                local OtherFootball = OtherCharacter and OtherCharacter:FindFirstChild("Ball")
                local OtherHumanoidRootPart = OtherCharacter and OtherCharacter:FindFirstChild("HumanoidRootPart")

                if OtherFootball and OtherHumanoidRootPart and LocalHumanoidRootPart then
                    LocalHumanoidRootPart.CFrame = OtherFootball.CFrame

					local args = {
						buffer.fromstring("\022\001"),
						{
							{
								"tackle"
							}
						}
					}
					game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args))

                end
            end
        end
        task.wait(0.2)
    end
end

spawn(function()
    local LocalCharacter = LocalPlayer.Character
    local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
    local Football = workspace.Terrain:FindFirstChild("Ball")

    if LocalHumanoidRootPart and Football then
        local originalPosition = LocalHumanoidRootPart.CFrame
        LocalHumanoidRootPart.CFrame = CFrame.new(Football.Position)
        StealBall()
        task.wait(0.3)
        LocalHumanoidRootPart.CFrame = originalPosition
    end
end)
end)

maintab:Textbox("Give Ball", function(v)
	local remote = game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable")
	local target = game.Players:FindFirstChild(v)
	if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		target.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(0, 1, 0))
		wait(0.2)
		remote:FireServer(buffer.fromstring("\022\001"), { { "kick", 1, false, vector.create(0, 1, 0) } })
	end
end)

maintab:Button("Manual Score", function()
if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
	if workspace:WaitForChild("map"):WaitForChild("Agoal") and workspace:WaitForChild("map"):WaitForChild("Bgoal") then
		if game:GetService("Players").LocalPlayer.Team then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame =
				(game:GetService("Players").LocalPlayer.Team.Name == "A"
					and workspace.map.Bgoal
					or workspace.map.Agoal
				).CFrame
		end
	end
end
end)

maintab:Button("Break Ball (Player Method, Req. Ball)", function()
    local baseplatePosition = Vector3.new(-190, 14864566, 492)
    local partSize = Vector3.new(10, 1, 10)
    local gap = 0

    for x = 0, 2 do
        for z = 0, 2 do
            local part = Instance.new("Part")
            part.Size = partSize
            part.Anchored = true
            part.Position = baseplatePosition + Vector3.new(x * (partSize.X + gap), 0, z * (partSize.Z + gap))
            part.Parent = workspace
        end
    end

    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    character:WaitForChild("HumanoidRootPart").CFrame =
        CFrame.new(baseplatePosition + Vector3.new(0, 100000000000000, 0))
end)

maintab:Button("Break Ball (Ball Method, Req. Ball)", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
local virtualInputManager = game:GetService("VirtualInputManager")

if humanoidRootPart then
    local originalPosition = humanoidRootPart.Position
    humanoidRootPart.CFrame = CFrame.new(Vector3.new(-390, 475, 354))
	task.wait(0.3)
    virtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
    task.wait(0.1)
    virtualInputManager:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
	task.wait(0.3)
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end
end)

maintab:Button("Permanent Break Ball (Req. Ball)", function()
workspace.FallenPartsDestroyHeight = -50000
game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(1, -49999, 1))
end)

maintab2:Label("Ball Magnet: Allows You To Grab The Ball From Further Away.")

maintab2:Button("Ball Magnet", function()
local remote = game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable")

getgenv().ballMagnetActive = not getgenv().ballMagnetActive

game.StarterGui:SetCore("SendNotification", {
	Title = "Ball Magnet",
	Text = getgenv().ballMagnetActive and "Enabled." or "Disabled.",
	Duration = 1
})

if getgenv().ballMagnetActive then
	if getgenv().ballMagnetConnection then
		getgenv().ballMagnetConnection:Disconnect()
	end

	getgenv().ballMagnetConnection = task.spawn(function()
		while getgenv().ballMagnetActive do
			pcall(function()
				remote:FireServer(buffer.fromstring("\021"))
			end)
			task.wait()
		end
	end)
else
	if getgenv().ballMagnetConnection then
		getgenv().ballMagnetConnection = nil
	end
end
end)

maintab2:Button("Bind Magnet (M2 BIND)", function()
local userInputService = game:GetService("UserInputService")
local remote = game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable")

userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        remote:FireServer(buffer.fromstring("\021"))
    end
end)
end)

maintab2:Label("Set The Auto-Counter Number To Your Character's Counter Move!")

_G.suppressNotifs = false

_G.autoSkills = {
	["toggleDetection"] = "dribble",
	["toggleCounter1"] = "skill1",
	["toggleCounter2"] = "skill2",
	["toggleCounter3"] = "skill3",
	["toggleCounter4"] = "skill4",
	["toggleCounter5"] = "skill5"
}

buffer = buffer or {
	fromstring = function(str)
		return str
	end
}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local ANIMATION_ID = "rbxassetid://109744655458082"
local cooldowns = {}

function notify(title, text, duration)
	if not _G.suppressNotifs then
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = duration or 2
		})
	end
end

RunService.Stepped:Connect(function()
	local char = player.Character
	local root = char and char:FindFirstChild("HumanoidRootPart")
	if not root then return end

	for _, target in ipairs(Players:GetPlayers()) do
		if target ~= player and target.Character and target.Team ~= player.Team then
			local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
			local targetHumanoid = target.Character:FindFirstChild("Humanoid")
			local animator = targetHumanoid and targetHumanoid:FindFirstChildOfClass("Animator")

			if targetHRP and animator then
				local distance = (root.Position - targetHRP.Position).Magnitude
				if distance <= 35 then
					local now = tick()
					local last = cooldowns[target] or 0
					if now - last >= 0.5 then
						for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
							if track.Animation.AnimationId == ANIMATION_ID then
								cooldowns[target] = now

								for _, toggleKey in ipairs({
									"toggleDetection",
									"toggleCounter1",
									"toggleCounter2",
									"toggleCounter3",
									"toggleCounter4",
									"toggleCounter5"
								}) do
									local skillName = _G.autoSkills[toggleKey]
									if _G[toggleKey] and skillName then
										local args
										if skillName == "dribble" then
											args = {
												buffer.fromstring("\022\001"),
												{ { skillName, false } }
											}
										else
											args = {
												buffer.fromstring("\022\001"),
												{ { skillName } }
											}
										end
										ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args))
									end
								end
								break
							end
						end
					end
				end
			end
		end
	end
end)

function createAutoCounter(label, toggleKey)
	maintab2:Button(label, function()
		_G[toggleKey] = not (_G[toggleKey] or false)
		notify(label, _G[toggleKey] and "Enabled." or "Disabled.", 3)
	end)
end

maintab2:Button("Toggle Keybinds", function()
	_G.keybindsEnabled = not (_G.keybindsEnabled or false)
	notify("Keybinds", _G.keybindsEnabled and "Enabled." or "Disabled.", 3)
end)

createAutoCounter("Auto-Dribble", "toggleDetection")
createAutoCounter("Auto-Counter (Move One)", "toggleCounter1")
createAutoCounter("Auto-Counter (Move Two)", "toggleCounter2")
createAutoCounter("Auto-Counter (Move Three)", "toggleCounter3")
createAutoCounter("Auto-Counter (Move Four)", "toggleCounter4")
createAutoCounter("Auto-Counter (Move Five)", "toggleCounter5")

if not _G._keybindSetup then
	_G._keybindSetup = true

	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed or not _G.keybindsEnabled then return end

		local keyMap = {
			[Enum.KeyCode.Z] = {"toggleDetection", "Auto-Dribble"},
			[Enum.KeyCode.X] = {"toggleCounter1", "Auto-Counter (Move One)"},
			[Enum.KeyCode.C] = {"toggleCounter2", "Auto-Counter (Move Two)"},
			[Enum.KeyCode.V] = {"toggleCounter3", "Auto-Counter (Move Three)"},
			[Enum.KeyCode.N] = {"toggleCounter4", "Auto-Counter (Move Four)"},
			[Enum.KeyCode.M] = {"toggleCounter5", "Auto-Counter (Move Five)"}
		}

		local mapping = keyMap[input.KeyCode]
		if mapping then
			local toggleKey, label = unpack(mapping)
			_G[toggleKey] = not (_G[toggleKey] or false)
			notify(label, _G[toggleKey] and "Enabled." or "Disabled.", 3)
		end
	end)
end

maintab:Button("Auto QuickTimeEvent", function()
    local runService = game:GetService("RunService")
    local players = game:GetService("Players")
    local virtualInputManager = game:GetService("VirtualInputManager")
    local starterGui = game:GetService("StarterGui")
    local player = players.LocalPlayer

    _G.QuickTimeEvent = not _G.QuickTimeEvent

    local function sendNotification(status)
        if not _G.suppressNotifs then
            starterGui:SetCore("SendNotification", {
                Title = "QuickTimeEvent",
                Text = status,
                Duration = 1
            })
        end
    end

    local function getAllTextLabels(parent)
        local textLabels = {}
        for _, descendant in ipairs(parent:GetDescendants()) do
            if descendant:IsA("TextLabel") then
                table.insert(textLabels, descendant)
            end
        end
        return textLabels
    end

    local function convertNumberToKeyText(text)
        local numberMap = {
            ["1"] = "One", ["2"] = "Two", ["3"] = "Three", ["4"] = "Four", ["5"] = "Five",
            ["6"] = "Six", ["7"] = "Seven", ["8"] = "Eight", ["9"] = "Nine", ["0"] = "Zero"
        }
        return numberMap[text] or text
    end

    local function checkQTE()
        if _G.QuickTimeEvent and player and player:FindFirstChild("PlayerGui") then
            local qteGui = player.PlayerGui:FindFirstChild("Qte")
            if qteGui and qteGui:FindFirstChild("QTE") and qteGui.QTE:FindFirstChild("Frame") then
                local qteFrame = qteGui.QTE.Frame
                if qteFrame.Size.X.Scale <= 0.740000169 and qteFrame.Size.X.Scale >= 0.720000019 and
                   qteFrame.Size.Y.Scale <= 0.74999999 and qteFrame.Size.Y.Scale >= 0.720000019 then

                    local textLabels = getAllTextLabels(qteGui.QTE)

                    for _, label in ipairs(textLabels) do
                        local keyText = convertNumberToKeyText(label.Text)
                        local keyCode = Enum.KeyCode[keyText]
                        if keyCode then
                            virtualInputManager:SendKeyEvent(true, keyCode, false, game)
                            virtualInputManager:SendKeyEvent(false, keyCode, false, game)
                        end
                    end
                end
            end
        end
    end

    runService.RenderStepped:Connect(checkQTE)
    sendNotification(_G.QuickTimeEvent and "Enabled." or "Disabled.")
end)

maintab:Button("Auto GK (Made By Daffy, Reset To Disable.)", function()
local plr = game.Players.LocalPlayer
local char = plr.Character
local cam = game.Workspace.CurrentCamera

local function ball()
    return game.Workspace.Terrain:FindFirstChild("Ball")
end

local function getGKgoal()
    if plr.Team == game.Teams.A then
        return workspace.map.Agoal
    elseif plr.Team == game.Teams.B then
        return workspace.map.Bgoal
    end
end

local con = game["Run Service"].RenderStepped:Connect(function()
    local ball:Part = ball()
    if ball and plr.Team ~= game.Teams.lobby then
        cam.CFrame = CFrame.lookAt(cam.CFrame.Position, ball.Position)

        local dist = (plr.Character.HumanoidRootPart.Position - ball.Position).Magnitude
        if dist <= 50 then
            if ball.Position.Y >= plr.Character.HumanoidRootPart.Position.Y + 6 then
                plr.Character.Humanoid.Jump = true
            else
                plr.Character.Humanoid.Jump = false
            end

            local args = {
                buffer.fromstring("\022\001"),
                {
                    { "tackle" }
                }
            }

            game.ReplicatedStorage:WaitForChild("ByteNetReliable"):FireServer(unpack(args))
        end
    end
end)

repeat
    task.wait()
until char.Humanoid.Health <= 0
con:Disconnect()
end)

maintab:Button("Team Goal (YOUR GOAL)", function()
local plr = game.Players.LocalPlayer
				if plr.Team == game.Teams:FindFirstChild("A") then
					plr.Character.HumanoidRootPart.Position = Vector3.new(-538, 3, 1603)
				elseif plr.Team == game.Teams:FindFirstChild("B") then
					plr.Character.HumanoidRootPart.Position = Vector3.new(-535, 3, 946)
				end
end)

maintab:Button("Fix Duplicate Ball", function()
for _, obj in ipairs(workspace.Terrain:GetDescendants()) do
	if obj:IsA("MeshPart") and obj.Name == "Ball" then
		obj:Destroy()
	end
end
end)

maintab:Button("Hide Ace Eater", function()
local char = game.Players.LocalPlayer.Character
local ogAnim = char.Animate.idle.Animation1.AnimationId

local UserInputService = game:GetService("UserInputService")
local starterGui = game:GetService("StarterGui")

_G.HideAce = not _G.HideAce

local function sendNotification(status)
    starterGui:SetCore("SendNotification", {
        Title = "Hide Ace Toggle",
        Text = status,
        Duration = 1
    })
end

function onKeyPress(inputObject, gameProcessedEvent)
    if not gameProcessedEvent and _G.HideAce then
        if inputObject.KeyCode == Enum.KeyCode.Five and game.Players.LocalPlayer:GetAttribute("style") == "donlorenzo" then 
            task.wait(0.1)
            for _, track in ipairs(char.Humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://108103339994438" then
                    track:Stop()
                    break
                end
            end
        end
    end
end

UserInputService.InputBegan:Connect(onKeyPress)

sendNotification(_G.HideAce and "Enabled." or "Disabled.")
end)

maintab:Button("Barou Devour Goal", function()
local plr = game.Players.LocalPlayer

			local function countEnimTeamMembers()
				local op = game.Teams:FindFirstChild("A")
				if plr.Team == game.Teams:FindFirstChild("A") then
					op = game.Teams:FindFirstChild("B")
				end
				local count = 0
				for _, player in ipairs(game.Players:GetPlayers()) do
					if player.Team == op then
						count += 1
					end
				end
				return count
			end
			
			local function getTwoRandomEnemies()
				local enemies = {}
				local op = game.Teams:FindFirstChild("A")
				if plr.Team == game.Teams:FindFirstChild("A") then
					op = game.Teams:FindFirstChild("B")
				end
				
				for _, player in ipairs(game.Players:GetPlayers()) do
					if player ~= plr and player.Team == op then
						table.insert(enemies, player)
					end
				end
				
				for i = #enemies, 2, -1 do
					local j = math.random(1, i)
					enemies[i], enemies[j] = enemies[j], enemies[i]
				end

				return enemies[1], enemies[2]
			end
			
			if countEnimTeamMembers() >= 2 then
				local p1, p2 = getTwoRandomEnemies()
				if not p1 or not p2 then return end
				
				local op = game.Teams:FindFirstChild("A")
				if plr.Team == game.Teams:FindFirstChild("A") then
					op = game.Teams:FindFirstChild("B")
				end

				local function tpToPlayer(targetPlayer)
					local char = plr.Character or plr.CharacterAdded:Wait()
					local root = char:WaitForChild("HumanoidRootPart")
					local targetRoot = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")

					if root and targetRoot then
						root.CFrame = targetRoot.CFrame
					end
				end

				tpToPlayer(p1)
				task.wait(0.3)
				tpToPlayer(p2)
				
				task.wait(0.3)
				
				if plr.Team == game.Teams:FindFirstChild("A") then
					plr.Character.HumanoidRootPart.Position = Vector3.new(-625, 3, 925)
				elseif plr.Team == game.Teams:FindFirstChild("B") then
					plr.Character.HumanoidRootPart.Position = Vector3.new(-588, 3, 1643)
				end
			end
end)

maintab:Button("Nagi Dream Goal", function()
local plr = game.Players.LocalPlayer
if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
    local hrp = plr.Character.HumanoidRootPart
    
    if plr.Team == game.Teams:FindFirstChild("A") then
        hrp.CFrame = CFrame.new(-459, 3, 862)
    elseif plr.Team == game.Teams:FindFirstChild("B") then
        hrp.CFrame = CFrame.new(-611, 3, 1682) * CFrame.Angles(0, math.rad(180), 0)
    end
    if plr.Character and plr.Character:FindFirstChild("Humanoid") then
    plr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
    task.wait(0.2)
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Two, false, game)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Two, false, game)
end
end)

maintab:Button("Isagi U-20 Goal", function()
local plr = game.Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local teams = game:GetService("Teams")

if plr.Team == teams:FindFirstChild("A") then
    hrp.Position = Vector3.new(-539, 3, 996)
elseif plr.Team == teams:FindFirstChild("B") then
    hrp.Position = Vector3.new(-537, 3, 1557)
end

task.wait(0.5)

local skillRemote = game.ReplicatedStorage:WaitForChild("SkillRemote")
skillRemote:FireServer("Skill3")
end)

maintab:Button("Shidou Back-Heel Goal (Must Be Overtime.)", function()
local plr = game.Players.LocalPlayer
				if plr.Team == game.Teams:FindFirstChild("A") then
					plr.Character.HumanoidRootPart.Position = Vector3.new(-625, 3, 925)
				elseif plr.Team == game.Teams:FindFirstChild("B") then
					plr.Character.HumanoidRootPart.Position = Vector3.new(-588, 3, 1643)
				end
				task.wait(0.25)
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Two, false, game)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Two, false, game)
			end)

maintab2:Label("Other Features: Self Explanatory, Other Silent Features.")

maintab2:Button("Auto Formless (Binds To T.)", function()
	local UIS = game:GetService("UserInputService")
	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui = game:GetService("StarterGui")
	local Camera = workspace.CurrentCamera

	local LP = Players.LocalPlayer
	local ByteNetReliable = ReplicatedStorage:WaitForChild("ByteNetReliable")

	_G.autoFormlessEnabled = not (_G.autoFormlessEnabled or false)
	if not _G.suppressNotifs then
		StarterGui:SetCore("SendNotification", {
			Title = "Auto Formless",
			Text = _G.autoFormlessEnabled and "Enabled." or "Disabled.",
			Duration = 2
		})
	end

	if not _G.autoFormlessEnabled then return end

	UIS.InputBegan:Connect(function(input, gp)
		if not _G.autoFormlessEnabled or gp or input.KeyCode ~= Enum.KeyCode.T or UIS.MouseBehavior ~= Enum.MouseBehavior.LockCenter then return end

		local char = LP.Character
		local hrp = char and char:FindFirstChild("HumanoidRootPart")
		local hum = char and char:FindFirstChildOfClass("Humanoid")
		if not hrp or not hum then return end

		hum.AutoRotate = false
		hrp.CFrame *= CFrame.Angles(0, math.rad(180), 0)

		local camType, camSubject = Camera.CameraType, Camera.CameraSubject
		Camera.CameraType = Enum.CameraType.Scriptable
		Camera.CFrame = hrp.CFrame + Vector3.new(0, 2, 0)

		task.delay(0.1, function()
			if LP.Character and LP.Character:FindFirstChildOfClass("Humanoid") then
				Camera.CameraSubject = LP.Character:FindFirstChildOfClass("Humanoid")
				Camera.CameraType = Enum.CameraType.Custom
			else
				Camera.CameraSubject = camSubject
				Camera.CameraType = camType
			end
			hum.AutoRotate = true
		end)

		task.wait(0.1)
		ByteNetReliable:FireServer(
			buffer.fromstring("\022\001"),
			{ { "kick", 24, false, vector.create(0, 1, 0) } }
		)

		ByteNetReliable:FireServer(
			buffer.fromstring("\022\001"),
			{ { "skill1" } }
		)
	end)
end)

local remote = game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable")
local UIS = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local cam = workspace.CurrentCamera

local airDribbleEnabled = false

maintab2:Button("Air Dribble (Binds To LeftAlt.)", function()
    airDribbleEnabled = not airDribbleEnabled
    StarterGui:SetCore("SendNotification", {
        Title = "Air Dribble",
        Text = airDribbleEnabled and "Enabled." or "Disabled.",
        Duration = 2
    })
end)

UIS.InputBegan:Connect(function(input, gp)
    if gp or input.KeyCode ~= Enum.KeyCode.LeftAlt then return end
    if not airDribbleEnabled then return end

local dir = cam.CFrame.LookVector
local kickVec = vector.create(dir.X * 0.7, 1, dir.Z * 0.7)
remote:FireServer(buffer.fromstring("\022\001"), { { "kick", 30, false, kickVec } })
    task.wait(0.5)
    remote:FireServer(buffer.fromstring("\021"))
	wait(0.05)
    remote:FireServer(buffer.fromstring("\021"))	
end)

_G.AutoToggles = _G.AutoToggles or {
	CF = false,
	GK = false,
	CFConn = nil,
	GKConn = nil
}

buffer = buffer or {
	fromstring = function(str)
		return str
	end
}

function _G.firePacketsIfNear()
	local char = game:GetService("Players").LocalPlayer.Character
	if not char then return end
	local root = char:FindFirstChild("HumanoidRootPart")
	if not root then return end

	if (root.Position - Vector3.new(-260, 4, -1474)).Magnitude <= 15 or
	   (root.Position - Vector3.new(-262, 4, -1722)).Magnitude <= 15 then
		game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(buffer.fromstring("\003\001\001\000A"))
		game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(buffer.fromstring("\003\001\001\000B"))
	end
end

function _G.fireGKPackets()
	local char = game:GetService("Players").LocalPlayer.Character
	if not char then return end
	local root = char:FindFirstChild("HumanoidRootPart")
	if not root then return end

	game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(buffer.fromstring("\003\005\001\000B"))
	game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(buffer.fromstring("\003\005\001\000A"))
end

maintab2:Button("Auto CF", function()
	_G.AutoToggles.CF = not _G.AutoToggles.CF

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Auto CF",
		Text = _G.AutoToggles.CF and "Enabled." or "Disabled.",
		Duration = 1
	})

	if _G.AutoToggles.CF then
		_G.AutoToggles.CFConn = game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
			task.wait(1)
			_G.firePacketsIfNear()
		end)

		task.spawn(function()
			repeat task.wait() until game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			_G.firePacketsIfNear()
		end)
	else
		if _G.AutoToggles.CFConn then
			_G.AutoToggles.CFConn:Disconnect()
			_G.AutoToggles.CFConn = nil
		end
	end
end)

maintab2:Button("Auto GK", function()
	_G.AutoToggles.GK = not _G.AutoToggles.GK

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Auto-GK",
		Text = _G.AutoToggles.GK and "Enabled." or "Disabled.",
		Duration = 1
	})

	if _G.AutoToggles.GK then
		_G.AutoToggles.GKConn = game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
			task.wait(1)
			_G.fireGKPackets()
		end)

		task.spawn(function()
			repeat task.wait() until game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			_G.fireGKPackets()
		end)
	else
		if _G.AutoToggles.GKConn then
			_G.AutoToggles.GKConn:Disconnect()
			_G.AutoToggles.GKConn = nil
		end
	end
end)

funtab:Button("Don Lorenzo (Nagi)", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Credits",
    Text = "brought to you by celeron!",
    Duration = 5,
    Button1 = "OK",
})
local plr = game.Players.LocalPlayer
local char = plr.Character
local hum = char.Humanoid
local root = char.HumanoidRootPart
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")


local skill1Anim = Instance.new("Animation")
skill1Anim.AnimationId = "rbxassetid://102294508090597"
local s1db = false
local dribble = hum:LoadAnimation(skill1Anim)
dribble.Priority = Enum.AnimationPriority.Action2


local skill2Anim = Instance.new("Animation")
skill2Anim.AnimationId = "rbxassetid://90734196141468"
local s2db = false
local controlJump = hum:LoadAnimation(skill2Anim)
controlJump.Priority = Enum.AnimationPriority.Action2

local skill2AnimVAR = Instance.new("Animation")
skill2AnimVAR.AnimationId = "rbxassetid://82371642989185"
local s2dbVar = false
local controlLand = hum:LoadAnimation(skill2AnimVAR)
controlLand.Priority = Enum.AnimationPriority.Action3

local skill3Anim = Instance.new("Animation")
skill3Anim.AnimationId = "rbxassetid://85862104307480"
local s3db = false
local pass = hum:LoadAnimation(skill3Anim)
pass.Priority = Enum.AnimationPriority.Action2


local function haveBall()
	local Football = char and char:FindFirstChild("Ball")
	return Football ~= nil
end

function onKeyPress(inputObject, gameProcessedEvent)
	if not gameProcessedEvent then
		if inputObject.KeyCode == Enum.KeyCode.One then
			
			if not haveBall() then return end
			if s1db == false then
				s1db = true
				
				dribble:Play()
				local vel = Instance.new("BodyVelocity")
				vel.MaxForce = Vector3.new(1,0,1) * 30000
				vel.Name = "BodyVelocity" .. math.random(1,99999)
				vel.Velocity = root.CFrame.LookVector * 40
				vel.Parent = root
				game.Debris:AddItem(vel, 2.4)
				local sfx = game.ReplicatedStorage.Resources.donlorenzo.dribbletest:Clone()
				sfx.Parent = root
				sfx:Play()
				game.Debris:AddItem(sfx, 2.5)
				for _, v in pairs (game.ReplicatedStorage.Resources.donlorenzo.skill1movingpart:GetDescendants()) do
					if v.Name == "b" or v.Name == "p" then
						local new = v:Clone()
						new.Parent = root
						new.Enabled = true
						game.Debris:AddItem(new, 2.5)
					end
				end
				for _, v in pairs (char:GetChildren()) do
					if v.Name == "Torso" or v.Name == "Right Leg" or v.Name == "Right Arm" or v.Name == "Left Leg" or v.Name == "Left Arm" or v.Name == "Head" then
						for _, g in pairs (game.ReplicatedStorage.Resources.donlorenzo.ult4aura:GetChildren()) do
							if g.Name == "Fire" or g.Name == "Fog" or g.Name == "R. C. Fire" or g.Name == "mainfire" then
								local new = g:Clone()
								new.Parent = v
								new.Enabled = true
								new.LockedToPart = true
								game.Debris:AddItem(new, 2.5)
							end
						end
					end
				end
				
				repeat
					task.wait()
					VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
					vel.Velocity = root.CFrame.LookVector * 40
				until not root:FindFirstChild(vel.Name)
				
				task.wait(21.6)
				for _, v in pairs (root:GetDescendants()) do
					if v.Name == "b" or v.Name == "p" then
						v:Destroy()
					end
				end
				s1db = false
			end
			
			
		elseif inputObject.KeyCode == Enum.KeyCode.Two then
			
			if haveBall() then return end
			if s2db == false then
				s2db = true
				controlJump:Play()
				
				local did = false
				
				for i = 1, 2, 0.1 do
					if game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable then
						did = true
						break
					end
					task.wait(0.1)
				end
				
				if did then
					controlJump:Stop()
					controlLand:Play()
					
					local sfx = game.ReplicatedStorage.Resources.donlorenzo.ult4:Clone()
					sfx.Parent = root
					sfx:Play()
					
					for _, v in pairs (game.ReplicatedStorage.Resources.donlorenzo.ult4vfx.rootlocation.skill4ballpartflashsteps:GetChildren()) do
						local new = v:Clone()
						new.Parent = char:FindFirstChild("Ball")
						new.Enabled = true
						new.LockedToPart = true
						game.Debris:AddItem(new, 0.85)
					end
					
					for _, v in pairs (char:GetChildren()) do
						if v.Name == "Torso" or v.Name == "Right Leg" or v.Name == "Right Arm" or v.Name == "Left Leg" or v.Name == "Left Arm" or v.Name == "Head" then
							for _, g in pairs (game.ReplicatedStorage.Resources.donlorenzo.ult4aura:GetChildren()) do
								if g.Name == "Fire" or g.Name == "Fog" or g.Name == "R. C. Fire" or g.Name == "mainfire" then
									local new = g:Clone()
									new.Parent = v
									new.Enabled = true
									new.LockedToPart = true
									game.Debris:AddItem(new, 1)
								end
							end
						end
					end
					task.wait(0.85)
					controlLand:Stop()
				end
				
				task.wait(20)
				s2db = false
			end
			
		elseif inputObject.KeyCode == Enum.KeyCode.Three then
			
			if not haveBall() then return end
			if s3db == false then
				s3db = true
				pass:Play()
				local sfx = game.ReplicatedStorage.Resources.donlorenzo.skill2:Clone()
				sfx.Parent = root
				sfx:Play()
				
				for _, v in pairs (char:GetChildren()) do
					if v.Name == "Torso" or v.Name == "Right Leg" or v.Name == "Right Arm" or v.Name == "Left Leg" or v.Name == "Left Arm" or v.Name == "Head" then
						for _, g in pairs (game.ReplicatedStorage.Resources.donlorenzo.ult4aura:GetChildren()) do
							if g.Name == "Fire" or g.Name == "Fog" or g.Name == "R. C. Fire" or g.Name == "mainfire" then
								local new = g:Clone()
								new.Parent = v
								new.Enabled = true
								new.LockedToPart = true
								game.Debris:AddItem(new, 1)
							end
						end
					end
				end
				
				task.wait(25)
				s3db = false
			end
		
		end
	end
end
task.wait(1)
print("loaded don lorenzo script")
UserInputService.InputBegan:connect(onKeyPress)
end)

funtab:Button("Ronaldo V2 (Shidou)", function()
local StarterGui = game:GetService("StarterGui")
StarterGui:SetCore("SendNotification", {
    Title = "Credits",
    Text = "brought to you by daffy!",
    Duration = 5,
    Button1 = "OK",
})

local plr = game.Players.LocalPlayer
local rep = game:GetService("ReplicatedStorage")
local initialized = false
local fahh = false

local function ToggleAttachment(attachment, enabled, duration)
	if not attachment then return end
	for _, descendant in ipairs(attachment:GetDescendants()) do
		if descendant:IsA("ParticleEmitter") then
			descendant.Enabled = enabled
		end
	end
	if duration and duration > 0 then
		task.delay(duration, function()
			ToggleAttachment(attachment, false)
		end)
	end
end

local function EmitAttachment(attachment)
	if not attachment then return end
	for _, descendant in ipairs(attachment:GetDescendants()) do
		if descendant:IsA("ParticleEmitter") then
			local delayTime = descendant:GetAttribute("EmitDelay") or 0
			local count = descendant:GetAttribute("EmitCount") or 1
			if delayTime > 0 then
				task.delay(delayTime, function()
					descendant:Emit(count)
				end)
			else
				descendant:Emit(count)
			end
		end
	end
end

local function GroupWeld(model, rootPart)
	for _, part in ipairs(rootPart:GetDescendants()) do
		if part:IsA("BasePart") and model:FindFirstChild(part.Name) then
			local weld = Instance.new("Weld")
			weld.Name = "weld"
			weld.Part0 = model:FindFirstChild(part.Name)
			weld.Part1 = part
			weld.Parent = part
		end
	end
end

local function hasball()
	return plr.Character:FindFirstChild("Ball") ~= nil
end

local function BodyVelocity(part, speed, duration, startAtZero, easingInfo, delayTween, delayStart, useCustomTween)
	for _, v in pairs(part:GetChildren()) do
		if v:IsA("BodyVelocity") then
			v:Destroy()
		end
	end

	local directionProperty = delayTween or "LookVector"
	local bv = Instance.new("BodyVelocity")
	bv.MaxForce = Vector3.new(350000, 0, 350000)
	bv.Parent = part
	task.delay(duration, bv.Destroy, bv)

	local valueHolder = Instance.new("NumberValue")
	valueHolder.Value = startAtZero and 0 or speed
	valueHolder.Parent = bv

	if not useCustomTween then
		local tweenInfo = easingInfo or TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local goal = { Value = startAtZero and 0 or speed }
		game.TweenService:Create(valueHolder, tweenInfo, goal):Play()
	else
		task.delay(useCustomTween, function()
			local easingStyle = easingInfo or Enum.EasingStyle.Linear
			local goal = { Value = startAtZero and 0 or speed }
			local tweenInfo = TweenInfo.new(duration, easingStyle, Enum.EasingDirection.Out)
			game.TweenService:Create(valueHolder, tweenInfo, goal):Play()
		end)
	end

	if not delayStart then
		bv.Velocity = part.CFrame[directionProperty] * speed
		local connection
		connection = game["Run Service"].RenderStepped:Connect(function()
			if not bv:IsDescendantOf(game) then
				connection:Disconnect()
				return
			end
			bv.Velocity = part.CFrame[directionProperty] * valueHolder.Value
		end)
	end

	return bv, valueHolder
end

local function sfx(sound:Sound, part:Instance)
	local s = sound:Clone()
	s.Parent = part
	s:Play()
	game.Debris:AddItem(s, s.TimeLength + 20)
end

game.UserInputService.InputBegan:Connect(function(input, bg)
	if bg then return end
	local char = plr.Character
	if input.KeyCode == Enum.KeyCode.Three then
		task.spawn(function()
			char.state.stun.Value = true
			task.wait(0.03)
			char.state.stun.Value = fahh and true or false
		end)

		task.wait(0.03)

		if char.state.stun.Value or not hasball() or fahh then return end

		local root = char:FindFirstChild("HumanoidRootPart") or char.PrimaryPart
		char.state.stun.Value = true
		local loopws = game:GetService("RunService").RenderStepped:Connect(function()
			char.Humanoid.WalkSpeed = 0
		end)
		fahh = true

		task.delay(4.6, function()
			loopws:Disconnect()
			char.Humanoid.WalkSpeed = 40
			char.state.stun.Value = false
			local cooldown = plr.PlayerGui.Hotbar.Backpack.Hotbar.skill3.Cooldown
			cooldown.Size = UDim2.new(1, 0, -1, 0)
			cooldown.Visible = true
			game.TweenService:Create(cooldown, TweenInfo.new(1, Enum.EasingStyle.Linear), {Size = UDim2.new(1, 0, 0, 0)}):Play()
			task.wait(1)
			cooldown.Visible = false
			fahh = false
		end)

		local anim = char.Humanoid:LoadAnimation(rep.Resources.ronaldo.running)
		anim:Play()

		local dribbleClone = rep.Resources.RonaldoDribble:Clone()
		GroupWeld(char, dribbleClone)
		dribbleClone.Parent = workspace.Effects
		sfx(rep.Resources.ronaldo.RonaldoDribble, root)
		game.Debris:AddItem(dribbleClone, 5)

		task.spawn(function()
			task.delay(1.5,  function() BodyVelocity(root,  40, 1   ) end)
			task.delay(1.8,  function() BodyVelocity(root, 120, 1.1 ) end)
			task.delay(2.5,  function() BodyVelocity(root,  90, 0.75) end)
			task.delay(2.9,  function() BodyVelocity(root, 100, 0.85) end)
			task.delay(3.2,  function() BodyVelocity(root, 175, 1.7 ) end)
			task.delay(3.9,  function() BodyVelocity(root,  40, 0.65) end)
		end)

		task.spawn(function()
			local attach = dribbleClone.Rig.Head["1"]
			EmitAttachment(attach)
			ToggleAttachment(attach, true, 1)
		end)

		task.delay(2.5,   function() EmitAttachment(dribbleClone.Rig.HumanoidRootPart["3"]) end)
		task.delay(2.933, function() EmitAttachment(dribbleClone.Rig.HumanoidRootPart["4"]) end)
		task.delay(3.2,   function() EmitAttachment(dribbleClone.Rig.HumanoidRootPart["3.2"]) end)
		task.delay(3.417, function() EmitAttachment(dribbleClone.Rig.HumanoidRootPart["3.5"]) end)
		task.delay(3.933, function() EmitAttachment(dribbleClone.Rig.HumanoidRootPart["5"]) end)

	elseif input.KeyCode == Enum.KeyCode.Two then
		if char.state.stun.Value or not hasball() or plr.PlayerGui.Hotbar.Backpack.Hotbar.skill2.Cooldown.Visible then return end

		local bicycle1 = Instance.new("Animation")
		bicycle1.AnimationId = "rbxassetid://126734456236034"
		local bicycle = char.Humanoid:LoadAnimation(bicycle1)
		bicycle.Priority = Enum.AnimationPriority.Action2
		bicycle:Play()

		sfx(rep.Resources.ronaldo.KICK, char.HumanoidRootPart)

		task.delay(0.8, function()
			local boom = rep.Resources.ronaldo.bicyclekick:Clone()
			boom.Parent = char.HumanoidRootPart
			boom.CFrame = char.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
			for _, v in pairs(boom:GetDescendants()) do
				if v:IsA("ParticleEmitter") then
					v:Emit(v:GetAttribute("EmitCount"))
				end
			end
			game.Debris:AddItem(boom, 5)
		end)
	end
end)

local function load(char)
	if initialized then return end
	initialized = true

	repeat task.wait() until plr.Team ~= game.Teams.lobby
	task.wait(0.1)

	local root = char:FindFirstChild("HumanoidRootPart")
	if not root then return end

	plr.PlayerGui.Hotbar.Backpack.Hotbar.skill1.Base.Reuse.Text = ""
	plr.PlayerGui.Hotbar.Backpack.Hotbar.skill3.Base.ToolName.Text = "CR7 Dribble"
	plr.PlayerGui.Hotbar.Backpack.Hotbar.skill2.Base.ToolName.Text = "Bicycle Kick"

	rep.Resources.shidou.NEWthemes.SoundId = "rbxassetid://101265113960897"
	rep.Resources.shidou.NEWshidouUlt.AnimationId = "rbxassetid://101997402253776"
end

load(plr.Character)

plr.CharacterAdded:Connect(function(char)
	task.wait(1)
	load(char)
end)
end)

funtab:Button("Gojo Moveset", function()
loadstring(game:HttpGet("https://pastebin.com/raw/TH8xDy9X"))()
end)

funtab:Button("Loki Moveset", function()
loadstring(game:HttpGet("https://pastebin.com/raw/LbRRX7SK"))()
end)

funtab:Button("Trolling Moveset", function()
    local char = game.Players.LocalPlayer.Character
    local plr = game.Players.LocalPlayer
    local hotbar = plr.PlayerGui.Hotbar
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    local animator = humanoid:FindFirstChildOfClass("Animator")

    local runAnimation = Instance.new("Animation")
    runAnimation.AnimationId = "rbxassetid://117921992582675"

    local walkAnimation = Instance.new("Animation")
    walkAnimation.AnimationId = "rbxassetid://117921992582675"

    local runTrack = animator:LoadAnimation(runAnimation)
    local walkTrack = animator:LoadAnimation(walkAnimation)

    humanoid.Running:Connect(function(speed)
        if speed > 8 then
            walkTrack:Stop()
            runTrack:Play()
        elseif speed > 0 then
            runTrack:Stop()
            walkTrack:Play()
        else
            walkTrack:Stop()
            runTrack:Stop()
        end
    end)

    local flowTexts = {
        ["nagi"] = "mcdonalds application",
        ["isagi"] = "2 loving parents",
        ["sae"] = "aura farm",
        ["rin"] = "luke warm",
        ["donlorenzo"] = "homeless person",
        ["kaiser"] = "clown of isagi's story",
        ["shidou"] = "saes #1 fan",
        ["aiku"] = "dih snake",
        ["barou"] = "barou barou kun",
        ["bachira"] = "ball hog",
        ["gagamaru"] = "team carrying goat"
    }

    if flowTexts[plr:GetAttribute("style")] then
        hotbar.MagicHealth.TextLabel.Text = flowTexts[plr:GetAttribute("style")]
    else
        hotbar.MagicHealth.TextLabel.Text = "you dont exist"
    end

    hotbar.MagicHealth.ModeText.Text = ""
    hotbar.MagicHealth.Health.Frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
end)

_G.mutecrowd = false

misctab:Button("Toggle Crowd", function()
	_G.mutecrowd = not _G.mutecrowd

	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Crowd Volume",
		Text = _G.mutecrowd and "Muted Crowd." or "Unmuted Crowd.",
		Duration = 1
	})

	task.spawn(function()
		while true do
			if _G.mutecrowd then
				game:GetService("SoundService")["football-crowd-3-69245"].Volume = 0
			else
				game:GetService("SoundService")["football-crowd-3-69245"].Volume = 0.3
				break
			end
			task.wait(0.05)
		end
	end)
end)

emotetab:Button("Toosie Slide", function()
_G.isEnabled = _G.isEnabled or false

local animationId = "rbxassetid://95959941666543"
local soundId = "rbxassetid://1845341094"

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator")

local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack = animator:LoadAnimation(animation)

local sound

local function toggleState()
    _G.isEnabled = not _G.isEnabled
    
    if _G.isEnabled then
        animationTrack:Play()
        sound = Instance.new("Sound")
        sound.Name = "Toosie Slide"
        sound.SoundId = soundId
        sound.Looped = true
        sound.Parent = game.SoundService
        sound:Play()
    else
        for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
            track:Stop()
        end

        local existingSound = game.SoundService:FindFirstChild("Toosie Slide")
        if existingSound then
            existingSound:Stop()
            existingSound:Destroy()
        end
    end
end

toggleState()
end)

emotetab:Button("Sae Pose", function()

_G.SaePose = _G.SaePose or false

local animationId = "rbxassetid://136812327261825"
local soundId = "rbxassetid://1843404009"

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator")

local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack = animator:LoadAnimation(animation)

local sound

local function toggleState()
    _G.SaePose = not _G.SaePose
    
    if _G.SaePose then
        animationTrack:Play()
        sound = Instance.new("Sound")
        sound.Name = "Sae Pose"
        sound.SoundId = soundId
        sound.Volume = 1
        sound.Looped = true
        sound.Parent = game.SoundService
        sound:Play()
    else
        for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
            track:Stop()
        end

        local existingSound = game.SoundService:FindFirstChild("Sae Pose")
        if existingSound then
            existingSound:Stop()
            existingSound:Destroy()
        end
    end
end

toggleState()
end)

emotetab:Button("Akuma Taunt", function()
local animationId = "rbxassetid://111005363990501"
local soundId = "rbxassetid://133370927301258"

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator")

local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack = animator:LoadAnimation(animation)

local sound = Instance.new("Sound")
sound.Name = "Akuma Taunt"
sound.SoundId = soundId
sound.Volume = 10
sound.Parent = game.SoundService

local function runOnce()
    animationTrack:Play()
    sound:Play()

    sound.Ended:Connect(function()
        sound:Destroy()
    end)

    animationTrack.Stopped:Connect(function()
        animationTrack:Stop()
    end)
end

runOnce()
end)

emotetab:Button("Cartoon Fall", function()
local animationId = "rbxassetid://98064370044269"
local soundIds = { "rbxassetid://8663054927", "rbxassetid://4979513906" }

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator")

local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack = animator:LoadAnimation(animation)

local sound = Instance.new("Sound")
sound.Name = "Ragdoll"
sound.Volume = 10
sound.Parent = game.SoundService

local currentIndex = 1

local function playNextSound()
    if currentIndex <= #soundIds then
        sound.SoundId = soundIds[currentIndex]
        sound:Play()

        sound.Ended:Connect(function()
            currentIndex = currentIndex + 1
            playNextSound()
        end)
    else
        sound:Destroy()
    end
end
animationTrack:Play()
playNextSound()
end)

emotetab:Button("Spit", function()
local animationId = "rbxassetid://97257010665720"
local soundId = "rbxassetid://18111052648"

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator")

local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack = animator:LoadAnimation(animation)

local sound = Instance.new("Sound")
sound.Name = "Spit"
sound.SoundId = soundId
sound.Volume = 2
sound.Parent = game.SoundService

animationTrack:Play()
sound:Play()

sound.Ended:Connect(function()
    sound:Destroy()
end)
end)

teleporttab:Button("Spawn Area", function()
if game.PlaceId == 94647229517154 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-269, 4, -1599)
elseif game.PlaceId == 85946466968831 then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(857, 9, -3263)
end
end)

teleporttab:Button("Middle Field", function()
if game.PlaceId == 94647229517154 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-540, 3, 1274)
elseif game.PlaceId == 85946466968831 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(543, 3, -378)
end
end)

teleporttab:Button("Gallery Area", function()
if game.PlaceId == 94647229517154 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(109, 66, 3337)
elseif game.PlaceId == 85946466968831 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1176, 71, 1568)
end
end)

teleporttab:Button("Goal Box (A)", function()
if game.PlaceId == 94647229517154 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-537, 3, 1575)
elseif game.PlaceId == 85946466968831 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(543, 3, 206)
end
end)

teleporttab:Button("Goal Box (B)", function()
if game.PlaceId == 94647229517154 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-534, 3, 974)
elseif game.PlaceId == 85946466968831 then
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(542, 3, -962)
end
end)

misctab:Button("Upgrade UI (very cool actually)", function()
loadstring(game:HttpGet("https://pastebin.com/raw/QDNYsgxQ"))()
end)

misctab:Button("Overtime Cinematics", function()
local vals = game.ReplicatedStorage.workspace
local timer = vals.timer
local ingame = vals.roundstart

local music1Isagi = game:GetService("ReplicatedStorage").Resources.isagi["isagi themeover"]
local music2Sae = game:GetService("ReplicatedStorage").Resources.sae["sae one shot match theme"]

local gui = Instance.new("ScreenGui")
gui.ScreenInsets = Enum.ScreenInsets.None
gui.Name = "overtimethang"
gui.Parent = game.Players.LocalPlayer.PlayerGui

local image = Instance.new("ImageLabel")
image.AnchorPoint = Vector2.new(0.5, 0.5)
image.Position = UDim2.new(0.5, 0,0.5, 0)
image.Size = UDim2.new(1.2, 0,1.2, 0)
image.Image = "rbxassetid://11030033771"
image.ImageTransparency = 0.8
image.BackgroundTransparency = 1
image.Parent = gui

local overtime = false

task.spawn(function()
    while task.wait(0.05) do
        image.Visible = overtime
        
        if overtime == true then
            if game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Custom then
                game.TweenService:Create(game.Workspace.CurrentCamera, TweenInfo.new(0.2), {FieldOfView = 100}):Play()
            end
            
            if image.Rotation == 0 then
                image.Rotation = 180
            else
                image.Rotation = 0
            end
        end
    end
end)

timer.Changed:Connect(function()
    if timer.Value == 0 and ingame.Value == true then
        overtime = true
        
        repeat
            music1Isagi:Play()
            for i = 1, 50 do
                task.wait(1)
                if ingame.Value == false then
                    break
                end
            end
            music2Sae:Play()
            for i = 1, 58 do
                task.wait(1)
                if ingame.Value == false then
                    break
                end
            end
        until ingame.Value == false
        
    elseif ingame.Value == false then
        
        overtime = false
        music1Isagi:Stop()
        music2Sae:Stop()
        game.TweenService:Create(game.Workspace.CurrentCamera, TweenInfo.new(0.2), {FieldOfView = 70}):Play()
        
    end
end)
end)

local bgmusicdb = false
misctab:Button("Background Music", function()
    if bgmusicdb == false then
        bgmusicdb = true
        local plr = game.Players.LocalPlayer
        local char = plr.Character
        local hum = char.Humanoid

        local music = {
            "rbxassetid://126478006472705",
            "rbxassetid://138210588552041",
            "rbxassetid://137856744878500",
            "rbxassetid://97581213878614",
            "rbxassetid://71371939631022",
            "rbxassetid://119592773299545",
            "rbxassetid://134456641764445",
            "rbxassetid://100509882059819",
            "rbxassetid://128623853689708",
            "rbxassetid://70979311703713",
            "rbxassetid://92420662159372",
            "rbxassetid://97837345641106",
            "rbxassetid://102469310336986",
            "rbxassetid://101851803743361",
        }


        if game.SoundService:FindFirstChild("BGMusic") then
            game.SoundService.BGMusic:Destroy()
        end
        local sfx = Instance.new("Sound")
        sfx.Name = "BGMusic"
        sfx.Parent = game.SoundService
        sfx.SoundId = music[math.random(1, #music)]

        task.spawn(function()
            while hum do
                sfx:Play()
                task.wait(sfx.TimeLength)
                sfx.SoundId = music[math.random(1, #music)]
            end
        end)

        task.spawn(function()
            while hum do
                task.wait()

                if game:GetService("ReplicatedStorage").workspace.awaken.Value ~= nil then
                    sfx:Pause()
                else
                    sfx:Resume()
                end
            end
        end)

        hum.Died:Connect(function()
            sfx:Destroy()
        end)
    end
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)
