local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()

local win = ui:Create({
    Name = "Celeron's GUI (Slap Battles)",
    ThemeColor = Color3.fromRGB(14, 14, 14),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local exptab = win:Tab("Exploits")
local antitab = win:Tab("Protection")
local farmtab = win:Tab("Farms")
local teletab = win:Tab("Areas")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
exptab:Label("This Section Contains Useful / Game-Breaking Scripts.")
antitab:Label("Protection Settings May Be Blatant.")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local lastSliderSet = nil

maintab:Slider("Player Speed", 19.5, 5, 85, function(v)
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid then return end

	if v == 8 then
		humanoid.WalkSpeed = 16
		lastSliderSet = 16
	else
		humanoid.WalkSpeed = v
		lastSliderSet = v
	end
end)

LocalPlayer.CharacterAdded:Connect(function(character)
	character:WaitForChild("Humanoid").Changed:Connect(function()
		local humanoid = character:FindFirstChild("Humanoid")
		if humanoid and lastSliderSet and humanoid.WalkSpeed ~= lastSliderSet then
			humanoid.WalkSpeed = lastSliderSet
		end
	end)
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local enabled = false
local cachedRemotes = {}

local function findEquippedGlove()
    local character = LocalPlayer.Character
    if not character then return nil end
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            return tool
        end
    end
end

local function getClosestPlayer()
    local myChar = LocalPlayer.Character
    local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end

    local closest, dist = nil, math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")
            if targetRoot then
                local mag = (targetRoot.Position - myRoot.Position).Magnitude
                if mag < dist then
                    dist = mag
                    closest = player
                end
            end
        end
    end
    return closest
end

local function findRelevantHitRemotes(gloveName)
    if cachedRemotes[gloveName] then return cachedRemotes[gloveName] end

    local nameLower = string.lower(gloveName or "")
    local hits = {}

    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("RemoteEvent") then
            local remoteLower = string.lower(obj.Name)
            if remoteLower == nameLower .. "hi"
            or (remoteLower:find(nameLower) and remoteLower:find("hit")) then
                table.insert(hits, obj)
            end
        end
    end

    cachedRemotes[gloveName] = hits
    return hits
end

local heartbeatConn
local lastFireTime = 0

maintab:Button("Slap Aura", function()
    enabled = not enabled

    if enabled and not heartbeatConn then
        heartbeatConn = RunService.Heartbeat:Connect(function()
            local currentTime = os.clock()
            if currentTime - lastFireTime < 0.5 then return end

            local glove = findEquippedGlove()
            local targetPlayer = getClosestPlayer()

            if targetPlayer and targetPlayer.Character then
                local torso = targetPlayer.Character:FindFirstChild("Torso")
                    or targetPlayer.Character:FindFirstChild("UpperTorso")
                    or targetPlayer.Character:FindFirstChild("HumanoidRootPart")

                if torso then
                    local remotes = {}

                    if glove then
                        local foundRemotes = findRelevantHitRemotes(glove.Name)
                        if foundRemotes and #foundRemotes > 0 then
                            remotes = foundRemotes
                        end
                    end

                    if #remotes == 0 then
                        for _, fallback in ipairs({"GeneralHit", "b"}) do
                            local remote = ReplicatedStorage:FindFirstChild(fallback)
                            if remote then
                                table.insert(remotes, remote)
                            end
                        end
                    end

                    for _, remote in ipairs(remotes) do
                        remote:FireServer(targetPlayer.Character:FindFirstChild(torso.Name))
                    end

                    lastFireTime = currentTime
                end
            end
        end)
    elseif not enabled and heartbeatConn then
        heartbeatConn:Disconnect()
        heartbeatConn = nil
    end

    StarterGui:SetCore("SendNotification", {
        Title = "Slap Aura",
        Text = enabled and "Enabled." or "Disabled.",
        Duration = 3
    })
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

local LocalPlayer = Players.LocalPlayer
local KSHitRemote = ReplicatedStorage:WaitForChild("KSHit")

local root = nil
local auraEnabled = true

local function updateRoot()
	local character = LocalPlayer.Character
	if character then
		root = character:FindFirstChild("HumanoidRootPart")
	end
end

LocalPlayer.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	updateRoot()
end)

if LocalPlayer.Character then
	updateRoot()
end

local function getClosestPlayer()
	local closest = nil
	local minDist = math.huge

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (player.Character.HumanoidRootPart.Position - root.Position).Magnitude
			if distance < minDist then
				minDist = distance
				closest = player
			end
		end
	end

	return closest
end

task.spawn(function()
	while true do
		if auraEnabled and root then
			local target = getClosestPlayer()
			if target and target.Character then
				local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					KSHitRemote:FireServer(targetRoot)
				end
			end
		end
		task.wait(0.5)
	end
end)

maintab:Button("Slap Aura (KS)", function()
	auraEnabled = not auraEnabled
	local status = auraEnabled and "Enabled." or "Disabled."
	StarterGui:SetCore("SendNotification", {
		Title = "Slap Aura (KS)",
		Text = status,
		Duration = 3
	})
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local range = 7
local cooldown = 0.5
local lastClick = 0
local enabled = false

local function emulateClick()
	VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, nil, 0)
	VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, nil, 0)
end

RunService.RenderStepped:Connect(function()
	if not enabled then return end

	local now = tick()
	if now - lastClick < cooldown then return end

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local targetHRP = player.Character.HumanoidRootPart
			local dist = (HumanoidRootPart.Position - targetHRP.Position).Magnitude

			if dist <= range then
				emulateClick()
				lastClick = now
				break
			end
		end
	end
end)

maintab:Button("Glove Triggerbot", function()
    enabled = not enabled

    local StarterGui = game:GetService("StarterGui")
    StarterGui:SetCore("SendNotification", {
        Title = "Glove Triggerbot",
        Text = enabled and "Enabled." or "Disabled.",
        Duration = 2
    })
end)

maintab:Button("Auto-Click Tycoon (MUST BE NEAR)", function()
local VirtualInputManager = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Camera = Workspace.CurrentCamera

local function getClickPart()
    local player = Players.LocalPlayer
    local helper = Workspace:FindFirstChild("Ã…Tycoon" .. player.Name)
    if helper then
        return helper:FindFirstChild("Click")
    end
    return nil
end

local function simulateClick(part)
    local screenPoint = Camera:WorldToViewportPoint(part.Position)
    VirtualInputManager:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, true, game, 0)
    VirtualInputManager:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, false, game, 0)
end

local connection
connection = RunService.RenderStepped:Connect(function()
    local clickPart = getClickPart()
    if not clickPart then
        connection:Disconnect()
        return
    end

    simulateClick(clickPart)
end)
end)

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local playerName = LocalPlayer.Name

local root = nil
local slappedValue = nil
local ragdolledValue = Instance.new("BoolValue")
ragdolledValue.Name = "Ragdolled"
ragdolledValue.Value = false
ragdolledValue.Parent = LocalPlayer

local antiFlingEnabled = false

local function notify(title, text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title;
			Text = text;
			Duration = 3,
		})
	end)
end

local function freezePlayer(source)
	if not antiFlingEnabled or not root then return end

	root.AssemblyLinearVelocity = Vector3.zero
	root.AssemblyAngularVelocity = Vector3.zero
	root.Anchored = true

	task.delay(2, function()
		if root then
			root.Anchored = false
		end
	end)
end

RunService.Heartbeat:Connect(function()
	if antiFlingEnabled and ragdolledValue and ragdolledValue.Value == true then
		freezePlayer("Ragdolled")
	end
end)

local function setupCharacter(character)
	root = character:WaitForChild("HumanoidRootPart")

	local localFolder = Workspace:FindFirstChild(playerName)
	if localFolder then
		slappedValue = localFolder:FindFirstChild("LastSlappedBy")
		ragdolledValue = localFolder:FindFirstChild("Ragdolled") or ragdolledValue
	end

	if slappedValue then
		slappedValue.Changed:Connect(function(newValue)
			if antiFlingEnabled and newValue and newValue ~= "" then
				freezePlayer("Slapped")
			end
		end)
	end
end

if LocalPlayer.Character then
	setupCharacter(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(setupCharacter)

antitab:Button("Anti-Fling", function()
	antiFlingEnabled = not antiFlingEnabled
	local status = antiFlingEnabled and "Enabled." or "Disabled."
	notify("Anti-Fling", status)
end)

exptab:Button("Get All Badge Gloves (INSTANT)", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/IncognitoScripts/SlapBattles/refs/heads/main/InstantGloves"))()
end)

antitab:Button("Anti-Void (Box Method)", function()
local Workspace = game:GetService("Workspace")

local originCFrame = CFrame.new(
    -4.08799744, -8.92285156, 1.83599997,
    -1.1920929e-07, 1.00000012, 0,
    -1.00000012, -1.1920929e-07, -0,
    -0, 0, 1
)
local center = originCFrame.Position
local sphereRadius = 117
local segmentSize = 8

local latSteps = math.floor(math.pi * sphereRadius / segmentSize)
local longSteps = math.floor((2 * math.pi * sphereRadius) / segmentSize)

for i = 0, latSteps do
    local theta = math.pi * (i / latSteps)
    local y = math.cos(theta) * sphereRadius
    local ringRadius = math.sin(theta) * sphereRadius

    for j = 0, longSteps - 1 do
        local phi = 2 * math.pi * (j / longSteps)
        local x = math.cos(phi) * ringRadius
        local z = math.sin(phi) * ringRadius

        local localPos = Vector3.new(x, y, z)
        local worldPos = originCFrame:PointToWorldSpace(localPos)
        local dir = (worldPos - center).Unit

        local segment = Instance.new("Part")
        segment.Size = Vector3.new(segmentSize, segmentSize, segmentSize)
        segment.Position = worldPos
        segment.Anchored = true
        segment.Material = Enum.Material.Carpet
        segment.BrickColor = BrickColor.new("Black")
        segment.CFrame = CFrame.new(worldPos, worldPos + dir)
        segment.Name = "VoidProtection"
        segment.Parent = Workspace
    end
end
end)

antitab:Button("Anti-Void (Void Method)", function()
local Workspace = game:GetService("Workspace")

local baseplate = Instance.new("Part")
baseplate.Name = "VoidProtection"
baseplate.Size = Vector3.new(1250, 1, 1250)
baseplate.Position = Vector3.new(15, -10, 6)
baseplate.Anchored = true
baseplate.Material = Enum.Material.SmoothPlastic
baseplate.Color = Color3.fromRGB(50, 50, 50)
baseplate.Parent = Workspace
end)

antitab:Button("Remove Anti-Void", function()
local function removeVoidProtections(parent)
	for _, obj in ipairs(parent:GetDescendants()) do
		if obj:IsA("BasePart") and obj.Name == "VoidProtection" then
			obj:Destroy()
		end
	end
end

removeVoidProtections(game)
end)

teletab:Button("Main Island", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3, -5, 16)
end)

teletab:Button("Moyai Island", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(229, -16, -12)
end)

teletab:Button("Slapple Island", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-381, 51, -12)
end)

teletab:Button("Castle", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(250, 34, 189)
end)

teletab:Button("The Plate", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Arena.Plate.CFrame
end)

teletab:Button("Baseplate", function()
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local baseplateName = "_TargetBaseplate"
local targetPosition = Vector3.new(5000, 228, 5000)
local baseplateSize = Vector3.new(512, 20, 512)

local function ensureBaseplate()
	local existing = Workspace:FindFirstChild(baseplateName)
	if not existing then
		local part = Instance.new("Part")
		part.Name = baseplateName
		part.Size = baseplateSize
		part.Position = targetPosition
		part.Anchored = true
		part.TopSurface = Enum.SurfaceType.Smooth
		part.BottomSurface = Enum.SurfaceType.Smooth
		part.Material = Enum.Material.SmoothPlastic
		part.Color = Color3.fromRGB(163, 162, 165)
		part.Parent = Workspace
	end
end

local function teleportToBaseplate()
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	root.CFrame = CFrame.new(targetPosition + Vector3.new(0, baseplateSize.Y / 2 + 5, 0))
end

ensureBaseplate()
teleportToBaseplate()
end)

farmtab:Label("Slap Farming: Recommended To Teleport To Baseplate.")

farmtab:Button("Slap Farm Info", function()
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Slap Farm";
	Text = "Dual: 5K/hour\nDual + 2X: 11K/hour\nDual + 2X + VIP: 22K/hour";
	Duration = 10;
})
end)

farmtab:Textbox("Slap Farm (Set Username To Alt)", function(v)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local GeneralRemote = ReplicatedStorage:WaitForChild("GeneralHit")

local targetPosition = Vector3.new(6500, 760, 4785)
local root = nil

local function updateRoot()
	local character = LocalPlayer.Character
	if character then
		root = character:FindFirstChild("HumanoidRootPart")
	end
end

LocalPlayer.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	updateRoot()
end)

if LocalPlayer.Character then
	updateRoot()
end

local function getClosestPlayer()
	local closest = nil
	local minDist = math.huge

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (player.Character.HumanoidRootPart.Position - root.Position).Magnitude
			if distance < minDist then
				minDist = distance
				closest = player
			end
		end
	end

	return closest
end

RunService.Heartbeat:Connect(function()
	if root then
		root.CFrame = CFrame.new(targetPosition)
	end
end)

task.spawn(function()
	while true do
		if root then
			local target = getClosestPlayer()
			if target and target.Character then
				GeneralRemote:FireServer(target.Character:FindFirstChild("HumanoidRootPart"))
			end
		end
		task.wait(1.25)
	end
end)
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local character = nil
local root = nil
local floating = false
local targetName = nil

local function floatEffect()
	if root then
		root.Anchored = false
		root.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
		root.AssemblyLinearVelocity = Vector3.zero
	end
end

local function teleportInFront()
	if not floating or not targetName then return end

	local targetPlayer = Players:FindFirstChild(targetName)
	if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local targetRoot = targetPlayer.Character.HumanoidRootPart
		local offset = targetRoot.CFrame.LookVector.Unit * 4
		local newPos = targetRoot.Position + offset + Vector3.new(0, 2, 0)
		root.CFrame = CFrame.new(newPos, targetRoot.Position)
		floatEffect()
	end
end

RunService.Heartbeat:Connect(function()
	if floating then
		teleportInFront()
	end
end)

LocalPlayer.CharacterAdded:Connect(function(char)
	character = char
	root = character:WaitForChild("HumanoidRootPart")
end)

if LocalPlayer.Character then
	character = LocalPlayer.Character
	root = character:WaitForChild("HumanoidRootPart")
end

farmtab:Textbox("Slap Farm (Set Username To Main)", function(v)
	targetName = v
	floating = true
end)

farmtab:Label("Killstreak / Reaper Farm: Recommended To Teleport Main To Baseplate.")

farmtab:Textbox("KS / Reaper Farm (Set Username To Main)", function(v)
	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")

	local LocalPlayer = Players.LocalPlayer
	local loopRunning = true
	local shouldRunCycle = false
	local customPosition = Vector3.new(-1009, 332, 5)

	local function teleportToLocation()
		local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if root then
			root.CFrame = CFrame.new(customPosition)
		end
	end

	local function teleportToTargetMultiple()
		if not v then return end
		local target = Players:FindFirstChild(v)
		local myRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end
		if not myRoot then return end

		local targetRoot = target.Character.HumanoidRootPart
		local offset = targetRoot.CFrame.LookVector.Unit * 5
		local destination = targetRoot.Position + offset + Vector3.new(0, 2, 0)

		for i = 1, 15 do
			myRoot.CFrame = CFrame.new(destination, targetRoot.Position)
			task.wait(0.05)
		end

		local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.Health = 0
		end
	end

	LocalPlayer.CharacterAdded:Connect(function()
		shouldRunCycle = true
	end)

	task.spawn(function()
		while loopRunning do
			if LocalPlayer.Character and shouldRunCycle then
				shouldRunCycle = false
				teleportToLocation()
				task.wait(0.5)
				teleportToTargetMultiple()
			end
			task.wait(0.1)
		end
	end)
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Nameless Admin", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
end)

misctab:Button("Destroy GUI", function()
    win:Exit()
end)

misctab:Button("Leave Game", function()
    game:Shutdown()
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)
