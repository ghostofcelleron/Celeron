local ui = loadstring(game:HttpGet("https://pastebin.com/raw/PQBu5K3w"))()

local win = ui:Create({
    Name = "Celeron's GUI (Slap Battles)",
    ThemeColor = Color3.fromRGB(14, 14, 14),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local exptab = win:Tab("Exploits")
local antitab = win:Tab("Protection")
local farmtab = win:Tab("Farms")
local teletab = win:Tab("Areas")
local placetab = win:Tab("Places")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
exptab:Label("This Section Contains Useful / Game-Breaking Scripts.")
antitab:Label("Protection Settings May Be Blatant.")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")
placetab:Label("These Places Can Be Joined Instantly!")

local TeleportService = game:GetService("TeleportService")
local LocalPlayer = game.Players.LocalPlayer

local function teleportTo(placeId)
    TeleportService:Teleport(placeId, LocalPlayer)
end

placetab:Button("Main Game", function()
    teleportTo(6403373529)
end)

placetab:Button("Killstreak Only", function()
    teleportTo(11520107397)
end)

placetab:Button("No One Shot Gloves", function()
    teleportTo(9015014224)
end)

placetab:Button("Slap Royale Matchmaking", function()
    teleportTo(9426795465)
end)

placetab:Button("Normal Barzil", function()
    teleportTo(7234087065)
end)

placetab:Button("Tower Of Hell (TOH)", function()
    teleportTo(115782629143468)
end)

placetab:Button("Custom Glove Customizer", function()
    teleportTo(9068206286)
end)

placetab:Button("Slap League", function()
    teleportTo(18698003301)
end)

placetab:Button("Soft Update Waiting Place", function()
    teleportTo(12712288037)
end)

placetab:Button("?", function()
    teleportTo(12845859004)
end)

placetab:Label("Warning: The Below Places Can't Be Joined Directly.")

placetab:Button("Testing Place", function()
    teleportTo(9020359053)
end)


placetab:Button("Tower Defense", function()
    teleportTo(15228348051)
end)


placetab:Button("Christmas Eve", function()
    teleportTo(15507333474)
end)

placetab:Button("Day in the Life of a Small Game Dev", function()
    teleportTo(136005148166028)
end)

placetab:Button("Null Zone", function()
    teleportTo(14422118326)
end)

placetab:Button("Staff Application", function()
    teleportTo(16034567693)
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local lastSliderSet = nil

maintab:Slider("Player Speed", 19.5, 5, 85, function(v)
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid then return end

	if v == 8 then
		humanoid.WalkSpeed = 16
		lastSliderSet = 16
	else
		humanoid.WalkSpeed = v
		lastSliderSet = v
	end
end)

LocalPlayer.CharacterAdded:Connect(function(character)
	character:WaitForChild("Humanoid").Changed:Connect(function()
		local humanoid = character:FindFirstChild("Humanoid")
		if humanoid and lastSliderSet and humanoid.WalkSpeed ~= lastSliderSet then
			humanoid.WalkSpeed = lastSliderSet
		end
	end)
end)

maintab:Button("Whistler Glove (CUSTOM, BEHIND PORTAL!)", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/Umbrella-Scripter/Slap-Battles/refs/heads/main/F.L.O.W.E.R.lua'))()
end)

maintab:Button("Remove Cooldown", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local tool = character:FindFirstChildOfClass("Tool") or player.Backpack:FindFirstChildOfClass("Tool")
while character.Humanoid.Health ~= 0 do
local localscript = tool:FindFirstChildOfClass("LocalScript")
local localscriptclone = localscript:Clone()
localscriptclone = localscript:Clone()
localscriptclone:Clone()
localscript:Destroy()
localscriptclone.Parent = tool
wait(0.1)
end
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local enabled = false
local cachedRemotes = {}

local function findEquippedGlove()
    local character = LocalPlayer.Character
    if not character then return nil end
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            return tool
        end
    end
end

local function getClosestPlayer()
    local myChar = LocalPlayer.Character
    local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end

    local closest, dist = nil, math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")
            if targetRoot then
                local mag = (targetRoot.Position - myRoot.Position).Magnitude
                if mag < dist then
                    dist = mag
                    closest = player
                end
            end
        end
    end
    return closest
end

local function findRelevantHitRemotes(gloveName)
    if cachedRemotes[gloveName] then return cachedRemotes[gloveName] end

    local nameLower = string.lower(gloveName or "")
    local hits = {}

    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("RemoteEvent") then
            local remoteLower = string.lower(obj.Name)
            if remoteLower == nameLower .. "hi"
            or (remoteLower:find(nameLower) and remoteLower:find("hit")) then
                table.insert(hits, obj)
            end
        end
    end

    cachedRemotes[gloveName] = hits
    return hits
end

local heartbeatConn
local lastFireTime = 0

maintab:Button("Slap Aura", function()
    enabled = not enabled

    if enabled and not heartbeatConn then
        heartbeatConn = RunService.Heartbeat:Connect(function()
            local currentTime = os.clock()
            if currentTime - lastFireTime < 0.5 then return end

            local glove = findEquippedGlove()
            local targetPlayer = getClosestPlayer()

            if targetPlayer and targetPlayer.Character then
                local torso = targetPlayer.Character:FindFirstChild("Torso")
                    or targetPlayer.Character:FindFirstChild("UpperTorso")
                    or targetPlayer.Character:FindFirstChild("HumanoidRootPart")

                if torso then
                    local remotes = {}

                    if glove then
                        local foundRemotes = findRelevantHitRemotes(glove.Name)
                        if foundRemotes and #foundRemotes > 0 then
                            remotes = foundRemotes
                        end
                    end

                    if #remotes == 0 then
                        for _, fallback in ipairs({"GeneralHit", "b"}) do
                            local remote = ReplicatedStorage:FindFirstChild(fallback)
                            if remote then
                                table.insert(remotes, remote)
                            end
                        end
                    end

                    for _, remote in ipairs(remotes) do
                        remote:FireServer(targetPlayer.Character:FindFirstChild(torso.Name))
                    end

                    lastFireTime = currentTime
                end
            end
        end)
    elseif not enabled and heartbeatConn then
        heartbeatConn:Disconnect()
        heartbeatConn = nil
    end

    StarterGui:SetCore("SendNotification", {
        Title = "Slap Aura",
        Text = enabled and "Enabled." or "Disabled.",
        Duration = 3
    })
end)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

local LocalPlayer = Players.LocalPlayer

local root = nil
local auraEnabled = false
local KSHitRemote = nil

local function updateRoot()
	local character = LocalPlayer.Character
	if character then
		root = character:FindFirstChild("HumanoidRootPart")
	end
end

LocalPlayer.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	updateRoot()
end)

if LocalPlayer.Character then
	updateRoot()
end

local function getClosestPlayer()
	local closest = nil
	local minDist = math.huge

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (player.Character.HumanoidRootPart.Position - root.Position).Magnitude
			if distance < minDist then
				minDist = distance
				closest = player
			end
		end
	end

	return closest
end

task.spawn(function()
	while true do
		if auraEnabled and root and KSHitRemote then
			local target = getClosestPlayer()
			if target and target.Character then
				local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					KSHitRemote:FireServer(targetRoot)
				end
			end
		end
		task.wait(0.5)
	end
end)

maintab:Button("Slap Aura (KS)", function()
	if not KSHitRemote then
		KSHitRemote = ReplicatedStorage:FindFirstChild("KSHit")
	end
	auraEnabled = not auraEnabled
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local range = 7
local cooldown = 1.450
local lastClick = 0
local enabled = false

local function emulateClick()
	VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, nil, 0)
	VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, nil, 0)
end

RunService.RenderStepped:Connect(function()
	if not enabled then return end

	local now = tick()
	if now - lastClick < cooldown then return end

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local targetHRP = player.Character.HumanoidRootPart
			local dist = (HumanoidRootPart.Position - targetHRP.Position).Magnitude

			if dist <= range then
				emulateClick()
				lastClick = now
				break
			end
		end
	end
end)

maintab:Button("Glove Triggerbot", function()
    enabled = not enabled

    local StarterGui = game:GetService("StarterGui")
    StarterGui:SetCore("SendNotification", {
        Title = "Glove Triggerbot",
        Text = enabled and "Enabled." or "Disabled.",
        Duration = 2
    })
end)

maintab:Button("Spam Quake (Equip Quake)", function()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local remote = ReplicatedStorage:WaitForChild("QuakeQuake")

for i = 1, 250 do
    remote:FireServer({ start = true })
    remote:FireServer({ finished = true })
    task.wait() 
end
end)

maintab:Button("Bind Rhythm (Binds To E, Equip Rhythm.)", function()
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local remote = ReplicatedStorage:WaitForChild("rhythmevent")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.E then
        local args = {
            [1] = "AoeExplosion",
            [2] = 42
        }
        remote:FireServer(unpack(args))
    end
end)
end)

maintab:Button("Free Radio (CLIENT)", function()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function cloneRadioTool()
    for _, obj in ipairs(game:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name == "Radio" then
            local backpack = LocalPlayer:FindFirstChildOfClass("Backpack")
            if backpack then
                local clone = obj:Clone()
                clone.Parent = backpack
                return
            end
        end
    end
end

cloneRadioTool()
end)

maintab:Button("Auto-Click Tycoon (MUST BE NEAR)", function()
local VirtualInputManager = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Camera = Workspace.CurrentCamera

local function getClickPart()
    local player = Players.LocalPlayer
    local helper = Workspace:FindFirstChild("ÅTycoon" .. player.Name)
    if helper then
        return helper:FindFirstChild("Click")
    end
    return nil
end

local function simulateClick(part)
    local screenPoint = Camera:WorldToViewportPoint(part.Position)
    VirtualInputManager:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, true, game, 0)
    VirtualInputManager:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, false, game, 0)
end

local connection
connection = RunService.RenderStepped:Connect(function()
    local clickPart = getClickPart()
    if not clickPart then
        connection:Disconnect()
        return
    end

    simulateClick(clickPart)
end)
end)

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local playerName = LocalPlayer.Name

local root = nil
local slappedValue = nil
local ragdolledValue = Instance.new("BoolValue")
ragdolledValue.Name = "Ragdolled"
ragdolledValue.Value = false
ragdolledValue.Parent = LocalPlayer

local antiFlingEnabled = false

local function notify(title, text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title;
			Text = text;
			Duration = 3,
		})
	end)
end

local function freezePlayer(source)
	if not antiFlingEnabled or not root then return end

	root.AssemblyLinearVelocity = Vector3.zero
	root.AssemblyAngularVelocity = Vector3.zero
	root.Anchored = true

	task.delay(2, function()
		if root then
			root.Anchored = false
		end
	end)
end

RunService.Heartbeat:Connect(function()
	if antiFlingEnabled and ragdolledValue and ragdolledValue.Value == true then
		freezePlayer("Ragdolled")
	end
end)

local function setupCharacter(character)
	root = character:WaitForChild("HumanoidRootPart")

	local localFolder = Workspace:FindFirstChild(playerName)
	if localFolder then
		slappedValue = localFolder:FindFirstChild("LastSlappedBy")
		ragdolledValue = localFolder:FindFirstChild("Ragdolled") or ragdolledValue
	end

	if slappedValue then
		slappedValue.Changed:Connect(function(newValue)
			if antiFlingEnabled and newValue and newValue ~= "" then
				freezePlayer("Slapped")
			end
		end)
	end
end

if LocalPlayer.Character then
	setupCharacter(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(setupCharacter)

antitab:Button("Anti-Fling", function()
	antiFlingEnabled = not antiFlingEnabled
	local status = antiFlingEnabled and "Enabled." or "Disabled."
	notify("Anti-Fling", status)
end)

local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local dangerousTools = {
    ["Error"] = true,
    ["OVERKILL"] = true,
    ["The Flex"] = true
}

local function hasDangerousTool(player)
    local backpack = player:FindFirstChildOfClass("Backpack")
    local character = player.Character
    if not backpack and not character then return false end

    for _, tool in ipairs(backpack:GetChildren()) do
        if dangerousTools[tool.Name] then return true end
    end
    if character then
        for _, tool in ipairs(character:GetChildren()) do
            if tool:IsA("Tool") and dangerousTools[tool.Name] then return true end
        end
    end
    return false
end

local antiOneShotEnabled = false
local connection
antitab:Button("Anti-OneShot", function()
    antiOneShotEnabled = not antiOneShotEnabled

    StarterGui:SetCore("SendNotification", {
        Title = "Anti-OneShot",
        Text = antiOneShotEnabled and "Enabled." or "Disabled.",
        Duration = 3
    })

    if antiOneShotEnabled then
        connection = RunService.RenderStepped:Connect(function()
            local myCharacter = LocalPlayer.Character
            if not myCharacter then return end

            local myRoot = myCharacter:FindFirstChild("HumanoidRootPart")
            if not myRoot then return end

            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and hasDangerousTool(player) then
                    local theirRoot = player.Character:FindFirstChild("HumanoidRootPart")
                    if theirRoot then
                        local offset = myRoot.Position - theirRoot.Position
                        local distance = offset.Magnitude
                        local minDistance = 20

                        if distance < minDistance then
                            local repelDir = offset.Unit
                            local targetPosition = theirRoot.Position + repelDir * minDistance
                            local upwardBias = Vector3.new(0, 0.5, 0)
                            local correctedPosition = targetPosition + upwardBias

                            myRoot.CFrame = CFrame.new(correctedPosition)
                            break
                        end
                    end
                end
            end
        end)
    elseif connection then
        connection:Disconnect()
        connection = nil
    end
end)

local running = false
antitab:Button("Anti-MegaRock", function()
    running = not running
    getgenv().antimegarocksb = running

    StarterGui:SetCore("SendNotification", {
        Title = "Anti-MegaRock",
        Text = running and "Enabled." or "Disabled.",
        Duration = 3
    })

    if running then
        task.spawn(function()
            while getgenv().antimegarocksb do
                for _, player in ipairs(game.Players:GetPlayers()) do
                    local char = player.Character
                    if char then
                        local rock = char:FindFirstChild("rock")
                        if rock then
                            rock.CanTouch = false
                            rock.CanQuery = false
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end)

exptab:Button("Get All Badge Gloves (INSTANT)", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/IncognitoScripts/SlapBattles/refs/heads/main/InstantGloves"))()
end)

antitab:Button("Anti-Void (ONLY MAIN ISLAND, Box Method)", function()
local Workspace = game:GetService("Workspace")

local originCFrame = CFrame.new(
    -4.08799744, -8.92285156, 1.83599997,
    -1.1920929e-07, 1.00000012, 0,
    -1.00000012, -1.1920929e-07, -0,
    -0, 0, 1
)
local center = originCFrame.Position
local sphereRadius = 117
local segmentSize = 8

local latSteps = math.floor(math.pi * sphereRadius / segmentSize)
local longSteps = math.floor((2 * math.pi * sphereRadius) / segmentSize)

for i = 0, latSteps do
    local theta = math.pi * (i / latSteps)
    local y = math.cos(theta) * sphereRadius
    local ringRadius = math.sin(theta) * sphereRadius

    for j = 0, longSteps - 1 do
        local phi = 2 * math.pi * (j / longSteps)
        local x = math.cos(phi) * ringRadius
        local z = math.sin(phi) * ringRadius

        local localPos = Vector3.new(x, y, z)
        local worldPos = originCFrame:PointToWorldSpace(localPos)
        local dir = (worldPos - center).Unit

        local segment = Instance.new("Part")
        segment.Size = Vector3.new(segmentSize, segmentSize, segmentSize)
        segment.Position = worldPos
        segment.Anchored = true
        segment.Material = Enum.Material.Carpet
        segment.BrickColor = BrickColor.new("Black")
        segment.CFrame = CFrame.new(worldPos, worldPos + dir)
        segment.Name = "VoidProtection"
        segment.Parent = Workspace
    end
end
end)

antitab:Button("Anti-Void (Void Method)", function()
local Workspace = game:GetService("Workspace")

local baseplate = Instance.new("Part")
baseplate.Name = "VoidProtection"
baseplate.Size = Vector3.new(1250, 1, 1250)
baseplate.Position = Vector3.new(15, -10, 6)
baseplate.Anchored = true
baseplate.Material = Enum.Material.SmoothPlastic
baseplate.Color = Color3.fromRGB(50, 50, 50)
baseplate.Parent = Workspace
end)

antitab:Button("Remove Anti-Void", function()
local function removeVoidProtections(parent)
	for _, obj in ipairs(parent:GetDescendants()) do
		if obj:IsA("BasePart") and obj.Name == "VoidProtection" then
			obj:Destroy()
		end
	end
end

removeVoidProtections(game)
end)

teletab:Button("Main Island", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3, -5, 16)
end)

teletab:Button("Moyai Island", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(229, -16, -12)
end)

teletab:Button("Slapple Island", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-381, 51, -12)
end)

teletab:Button("Castle", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(250, 34, 189)
end)

teletab:Button("The Plate", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Arena.Plate.CFrame
end)

teletab:Button("Baseplate", function()
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local baseplateName = "_TargetBaseplate"
local targetPosition = Vector3.new(5000, 228, 5000)
local baseplateSize = Vector3.new(512, 20, 512)

local function ensureBaseplate()
	local existing = Workspace:FindFirstChild(baseplateName)
	if not existing then
		local part = Instance.new("Part")
		part.Name = baseplateName
		part.Size = baseplateSize
		part.Position = targetPosition
		part.Anchored = true
		part.TopSurface = Enum.SurfaceType.Smooth
		part.BottomSurface = Enum.SurfaceType.Smooth
		part.Material = Enum.Material.SmoothPlastic
		part.Color = Color3.fromRGB(163, 162, 165)
		part.Parent = Workspace
	end
end

local function teleportToBaseplate()
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	root.CFrame = CFrame.new(targetPosition + Vector3.new(0, baseplateSize.Y / 2 + 5, 0))
end

ensureBaseplate()
teleportToBaseplate()
end)

farmtab:Label("Slap Farming: Recommended To Teleport To Baseplate.")

farmtab:Button("Slap Farm Info", function()
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Slap Farm";
	Text = "Dual: 5K/hour\nDual + 2X: 11K/hour\nDual + 2X + VIP: 22K/hour";
	Duration = 10;
})
end)

farmtab:Textbox("Slap Farm (Set Username To Alt.)", function(v)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local GeneralRemote = ReplicatedStorage:WaitForChild("GeneralHit")

local targetPosition = Vector3.new(6500, 760, 4785)
local root = nil

local function updateRoot()
	local character = LocalPlayer.Character
	if character then
		root = character:FindFirstChild("HumanoidRootPart")
	end
end

LocalPlayer.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	updateRoot()
end)

if LocalPlayer.Character then
	updateRoot()
end

local function getClosestPlayer()
	local closest = nil
	local minDist = math.huge

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (player.Character.HumanoidRootPart.Position - root.Position).Magnitude
			if distance < minDist then
				minDist = distance
				closest = player
			end
		end
	end

	return closest
end

RunService.Heartbeat:Connect(function()
	if root then
		root.CFrame = CFrame.new(targetPosition)
	end
end)

task.spawn(function()
	while true do
		if root then
			local target = getClosestPlayer()
			if target and target.Character then
				GeneralRemote:FireServer(target.Character:FindFirstChild("HumanoidRootPart"))
			end
		end
		task.wait(1.25)
	end
end)
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local character = nil
local root = nil
local floating = false
local targetName = nil

local function floatEffect()
	if root then
		root.Anchored = false
		root.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
		root.AssemblyLinearVelocity = Vector3.zero
	end
end

local function teleportInFront()
	if not floating or not targetName then return end

	local targetPlayer = Players:FindFirstChild(targetName)
	if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local targetRoot = targetPlayer.Character.HumanoidRootPart
		local offset = targetRoot.CFrame.LookVector.Unit * 4
		local newPos = targetRoot.Position + offset + Vector3.new(0, 2, 0)
		root.CFrame = CFrame.new(newPos, targetRoot.Position)
		floatEffect()
	end
end

RunService.Heartbeat:Connect(function()
	if floating then
		teleportInFront()
	end
end)

LocalPlayer.CharacterAdded:Connect(function(char)
	character = char
	root = character:WaitForChild("HumanoidRootPart")
end)

if LocalPlayer.Character then
	character = LocalPlayer.Character
	root = character:WaitForChild("HumanoidRootPart")
end

farmtab:Textbox("Slap Farm (Set Username To Main.)", function(v)
	targetName = v
	floating = true
end)

farmtab:Label("Kill Farm: Recommended To Teleport Main To Baseplate.")

farmtab:Textbox("Kill Farm (Set Username To Main.)", function(v)
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer

local function onCharacterSpawn(character)
	local rootPart = character:WaitForChild("HumanoidRootPart")

	local teleportPart = Workspace:WaitForChild("Lobby"):WaitForChild("Teleport1")
	rootPart.CFrame = teleportPart.CFrame + Vector3.new(0, 1, 0)
	firetouchinterest(rootPart, teleportPart, 0)
	task.wait(0.1)
	firetouchinterest(rootPart, teleportPart, 1)

	task.wait(0.7)

	local target = Players:FindFirstChild(v)
	if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		local targetRoot = target.Character.HumanoidRootPart
		local offset = targetRoot.CFrame.LookVector.Unit * 5
		local destination = targetRoot.Position + offset + Vector3.new(0, 1, 0)

		for i = 1, 25 do
			rootPart.CFrame = CFrame.new(destination, targetRoot.Position)
			task.wait(0.05)
		end
	end

	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.Health = 0
	end
end

LocalPlayer.CharacterAdded:Connect(onCharacterSpawn)

if LocalPlayer.Character then
	onCharacterSpawn(LocalPlayer.Character)
end
end)

farmtab:Label("Rob Farm: Silent, No Recommendations.")

farmtab:Button("Rob Absorb Farm (Use On Main, Rejoin To Disable.)", function()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local targetPosition = Vector3.new(5000, 241, 4999)
local remote = ReplicatedStorage:WaitForChild("rob")
local args = { false }

task.spawn(function()
    while true do
        remote:FireServer(unpack(args))
        task.wait(3)
    end
end)

RunService.Heartbeat:Connect(function()
    local character = player.Character
    if character then
        local root = character:FindFirstChild("HumanoidRootPart")
        if root then
            root.Velocity = Vector3.zero
            root.CFrame = CFrame.new(targetPosition)
        end
    end
end)
end)

farmtab:Textbox("Rob Absorb Farm (Set Username To Main, Semi-Blatant.)", function(v)
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer

local function onCharacterSpawn(character)
	local rootPart = character:WaitForChild("HumanoidRootPart")

	local teleportPart = Workspace:WaitForChild("Lobby"):WaitForChild("Teleport1")
	rootPart.CFrame = teleportPart.CFrame + Vector3.new(0, 1, 0)
	firetouchinterest(rootPart, teleportPart, 0)
	task.wait(0.1)
	firetouchinterest(rootPart, teleportPart, 1)

	task.wait(0.7)

	local target = Players:FindFirstChild(v)
	if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
		local targetRoot = target.Character.HumanoidRootPart
		local offset = targetRoot.CFrame.LookVector.Unit * 5
		local destination = targetRoot.Position + offset + Vector3.new(0, 1, 0)

		for i = 1, 25 do
			rootPart.CFrame = CFrame.new(destination, targetRoot.Position)
			task.wait(0.05)
		end
	end

	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.Health = 0
	end
end

LocalPlayer.CharacterAdded:Connect(onCharacterSpawn)

if LocalPlayer.Character then
	onCharacterSpawn(LocalPlayer.Character)
end
end)

farmtab:Label("Moyai Farm: Recommended To Join Small Servers.")

farmtab:Button("Moyai Farm Quest #1 (Use On Main, Rejoin To Disable.)", function()
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

local targetPosition = Vector3.new(280.659210, 21.155642, 240.360291)
local lookDirection = Vector3.new(0.989398, 0.000000, -0.145231)
local targetCFrame = CFrame.new(targetPosition, targetPosition + lookDirection)

root.CFrame = targetCFrame

task.wait(0.15)
VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
task.wait(0.05)
VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
task.wait(0.2)
VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
task.wait(0.05)
VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

local targetPosition = Vector3.new(272.066437, 13.453131, 245.083008)
local lookDirection = Vector3.new(0.185743, -0.000000, -0.982598)
local targetCFrame = CFrame.new(targetPosition, targetPosition + lookDirection)

root.CFrame = targetCFrame

local VirtualInputManager = game:GetService("VirtualInputManager")

while true do
    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
    task.wait(2.3)
end
end)

farmtab:Button("Moyai Farm Quest #1 (Use On Alt.)", function()
while true do game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(273, 14, 241) task.wait(0.05) end
end)

farmtab:Label("Brick Farm: Silent, No Recommendations.")

farmtab:Button("Brick Multi-Farm (Use On Main.)", function(v)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local targetPosition = Vector3.new(5000, 228, 5000)

RunService.Heartbeat:Connect(function()
    local character = player.Character
    if character then
        local root = character:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = CFrame.new(targetPosition)
        end
    end
end)

local VirtualInputManager = game:GetService("VirtualInputManager")

while true do
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
    task.wait(6.75)
end
end)

farmtab:Button("Brick Multi-Farm (Use On Alt.)", function(v)
local Workspace = game:GetService("Workspace")

local baseplate = Instance.new("Part")
baseplate.Size = Vector3.new(100, 1, 100)
baseplate.Position = Vector3.new(5002, 209, 4996)
baseplate.Anchored = true
baseplate.Name = "tpbaseplate"
baseplate.Parent = Workspace

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local targetPosition = Vector3.new(5002, 214, 4996)

RunService.Heartbeat:Connect(function()
    local character = player.Character
    if character then
        local root = character:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = CFrame.new(targetPosition)
        end
    end
end)
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Nameless Admin", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
end)

misctab:Button("Rejoin Server", function()
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local placeId = game.PlaceId
local jobId = game.JobId
local player = Players.LocalPlayer or Players:GetPlayers()[1]

if typeof(placeId) == "number" and typeof(jobId) == "string" and player then
    print("Rejoining current server...")
    print("PlaceId:", placeId)
    print("JobId:", jobId)
    TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
else
    print("Failed to get current server info or player.")
end
end)

misctab:Button("Switch Servers", function()
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local placeId = game.PlaceId
local currentJobId = game.JobId
local player = Players.LocalPlayer or Players:GetPlayers()[1]

local function findDifferentServer()
    local cursor = nil

    while true do
        local url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", placeId)
        if cursor then
            url = url .. "&cursor=" .. cursor
        end

        local success, response = pcall(function()
            return http_request({
                Url = url,
                Method = "GET",
                Headers = {
                    ["User-Agent"] = "Mozilla/5.0"
                }
            })
        end)

        if not success or not response or not response.Body then
            print("Request failed. Retrying...")
            task.wait(2)
            continue
        end

        if string.find(response.Body, "Too many requests") then
            print("Rate limited. Waiting...")
            task.wait(3)
            continue
        end

        local successDecode, data = pcall(function()
            return HttpService:JSONDecode(response.Body)
        end)

        if not successDecode or not data or not data.data then
            print("Failed to decode. Retrying...")
            task.wait(2)
            continue
        end

        for _, server in pairs(data.data) do
            if server.id ~= currentJobId and server.playing < server.maxPlayers then
                print("Found different server:", server.id)
                return server.id
            end
        end

        cursor = data.nextPageCursor
        task.wait(1)

        if not cursor then break end
    end

    return nil
end

local newJobId = findDifferentServer()
if newJobId and player then
    print("Teleporting to different server...")
    TeleportService:TeleportToPlaceInstance(placeId, newJobId, player)
else
    print("No different server found or player missing.")
end
end)

misctab:Button("Join Small Server (MAY GET RATE LIMITED!)", function()
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

_G.extracted1 = game.PlaceId
_G.extracted2 = nil

local userAgents = {
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)",
    "Mozilla/5.0 (X11; Linux x86_64)",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)",
    "Mozilla/5.0 (Android 11; Mobile; rv:89.0)",
    "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko)",
    "Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko)",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/114.0.0.0 Safari/537.36"
}

local function fetchSmartServer()
    local cursor = nil
    local smallestServer = nil
    local minPlayers = math.huge
    local retryCount = 0

    while true do
        local baseUrl = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", _G.extracted1)
        local url = baseUrl
        if cursor then
            url = url .. "&cursor=" .. cursor
        end

        local headers = {
            ["User-Agent"] = userAgents[math.random(1, #userAgents)],
            ["X-Requested-With"] = "XMLHttpRequest"
        }

        local success, response = pcall(function()
            return http_request({
                Url = url,
                Method = "GET",
                Headers = headers
            })
        end)

        if not success or not response or not response.Body then
            print("Request failed. Retrying...")
            retryCount += 1
            task.wait(math.random(2, 4) + retryCount)
            continue
        end

        if string.find(response.Body, "Too many requests") then
            print("Rate limited. Backing off...")
            retryCount += 1
            task.wait(math.random(3, 6) + retryCount)
            continue
        end

        local successDecode, data = pcall(function()
            return HttpService:JSONDecode(response.Body)
        end)

        if not successDecode or not data or not data.data then
            print("Failed to decode server data. Retrying...")
            retryCount += 1
            task.wait(math.random(2, 5) + retryCount)
            continue
        end

        retryCount = 0

        for _, server in pairs(data.data) do
            print("Checking server:", server.id, "Players:", server.playing, "/", server.maxPlayers)

            if server.playing >= 1 and server.playing <= 2 and server.playing < server.maxPlayers then
                print("Found ideal server with 1–2 players. Joining now.")
                return server
            end

            if server.playing < minPlayers and server.playing < server.maxPlayers then
                minPlayers = server.playing
                smallestServer = server
            end
        end

        cursor = data.nextPageCursor
        task.wait(math.random(1, 2))

        if not cursor then break end
    end

    return smallestServer
end

local server = fetchSmartServer()
if server then
    _G.extracted2 = server.id
    print("Extracted PlaceId:", _G.extracted1)
    print("Extracted JobId:", _G.extracted2)

    local player = Players.LocalPlayer or Players:GetPlayers()[1]

    if typeof(_G.extracted1) == "number" and typeof(_G.extracted2) == "string" and player then
        print("Teleporting to server...")
        TeleportService:TeleportToPlaceInstance(_G.extracted1, _G.extracted2, player)
    else
        print("Invalid data or player not found.")
    end
else
    print("No suitable server found.")
end
end)

misctab:Button("Destroy GUI", function()
    win:Exit()
end)


misctab:Button("Leave Game", function()
    game:Shutdown()
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)
