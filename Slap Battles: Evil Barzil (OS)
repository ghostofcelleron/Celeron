local ui = loadstring(game:HttpGet("https://pastebin.com/raw/PQBu5K3w"))()

local win = ui:Create({
    Name = "Celeron's GUI (SB: Evil Barzil)",
    ThemeColor = Color3.fromRGB(14, 14, 14),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local steptab = win:Tab("Steps")
local tooltab = win:Tab("Tools")
local placetab = win:Tab("Places")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
steptab:Label("Click The Steps In Order!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

placetab:Label("These Places Can Be Joined Instantly!")

local TeleportService = game:GetService("TeleportService")
local LocalPlayer = game.Players.LocalPlayer

local function teleportTo(placeId)
    TeleportService:Teleport(placeId, LocalPlayer)
end

placetab:Button("Killstreak Only", function()
    teleportTo(11520107397)
end)

placetab:Button("No One Shot Gloves", function()
    teleportTo(9015014224)
end)

placetab:Button("Slap Royale Matchmaking", function()
    teleportTo(9426795465)
end)

placetab:Button("Normal Barzil", function()
    teleportTo(7234087065)
end)

placetab:Button("Tower Of Hell (TOH)", function()
    teleportTo(115782629143468)
end)

placetab:Button("Custom Glove Customizer", function()
    teleportTo(9068206286)
end)

placetab:Button("Slap League", function()
    teleportTo(18698003301)
end)

placetab:Button("Soft Update Waiting Place", function()
    teleportTo(12712288037)
end)

placetab:Button("?", function()
    teleportTo(12845859004)
end)

placetab:Label("Warning: The Below Places Can't Be Joined Directly.")

placetab:Button("Testing Place", function()
    teleportTo(9020359053)
end)


placetab:Button("Tower Defense", function()
    teleportTo(15228348051)
end)


placetab:Button("Christmas Eve", function()
    teleportTo(15507333474)
end)

placetab:Button("Day in the Life of a Small Game Dev", function()
    teleportTo(136005148166028)
end)

placetab:Button("Null Zone", function()
    teleportTo(14422118326)
end)

steptab:Button("Grab Key", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local function hasLocalScript(tool)
    for _, child in ipairs(tool:GetDescendants()) do
        if child:IsA("LocalScript") then
            return true
        end
    end
    return false
end

local targetTool = nil
for _, obj in ipairs(Workspace:GetDescendants()) do
    if obj:IsA("Tool") and obj.Name == "Key" and hasLocalScript(obj) then
        targetTool = obj
        break
    end
end

if not targetTool then return end

local targetPart = targetTool:FindFirstChild("Handle")
if not targetPart then
    for _, child in ipairs(targetTool:GetChildren()) do
        if child:IsA("BasePart") then
            targetPart = child
            break
        end
    end
end

if not targetPart then return end

HRP.CFrame = targetPart.CFrame + Vector3.new(0, 3, 0)
end)

steptab:Button("Unlock Fence", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local target = Workspace:WaitForChild("GateMechanism"):WaitForChild("Touchpad")
HRP.CFrame = target.CFrame + Vector3.new(0, 3, 0)
end)

steptab:Button("Skip Obby", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(530, 35, -5)
end)

steptab:Button("Skip Fire", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(844, 58, -78)
end)

steptab:Button("Enter Tower", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
Character:WaitForChild("HumanoidRootPart")

local targetPart = Workspace:WaitForChild("TheOutside"):WaitForChild("TowerENT1"):WaitForChild("finish_zone")

Character:SetPrimaryPartCFrame(targetPart.CFrame + Vector3.new(0, 3, 0))
end)

steptab:Button("Skip Tower Steps (Get First Item In Tools!)", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Camera = Workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Backpack = LocalPlayer:WaitForChild("Backpack")

local screwdriver = Backpack:FindFirstChild("Screwdriver") or Character:FindFirstChild("Screwdriver")
if screwdriver and screwdriver:IsA("Tool") then
    Character:WaitForChild("Humanoid"):EquipTool(screwdriver)
end

Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(2202, 73, 41)

local target = Workspace:WaitForChild("Clickable"):WaitForChild("boltClick")
local screenPos = Camera:WorldToScreenPoint(target.Position)

VirtualInputManager:SendMouseButtonEvent(screenPos.X, screenPos.Y, 0, true, game, 0)
VirtualInputManager:SendMouseButtonEvent(screenPos.X, screenPos.Y, 0, false, game, 0)
wait(0.5)
Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2203, 61, 40)
end)

steptab:Button("Break Window (Get Second Item In Tools)", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait()
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local targetPos = Vector3.new(4772, 5321, -351)
local lookAt = Workspace.TheOffice.HallwaySection3.BreakableWindow1.Frame.Position

HRP.CFrame = CFrame.new(targetPos, lookAt)

task.wait(1)

local screenPos = Workspace.CurrentCamera:WorldToScreenPoint(targetPos)
VirtualInputManager:SendMouseButtonEvent(screenPos.X, screenPos.Y, 0, true, game, 0)
VirtualInputManager:SendMouseButtonEvent(screenPos.X, screenPos.Y, 0, false, game, 0)
end)

steptab:Button("Enter Boss Fight Area", function()
game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(4754, 5549, -306)
end)

tooltab:Button("Screwdriver", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local screwdriver = Workspace:FindFirstChild("Screwdriver")
if not screwdriver then
    return
end

HRP.CFrame = screwdriver.CFrame + Vector3.new(0, 3, 0)

local prompt = screwdriver:FindFirstChildOfClass("ProximityPrompt")
if prompt then
    fireproximityprompt(prompt)
else
end
end)

tooltab:Button("Large Hammer", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4974, 5321, -194)
fireproximityprompt(workspace.TheOffice.HallwaySection3.LargeHammerBox1["Large Hammer"].ProximityPrompt)
end)

tooltab:Button("Hook", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4975, 5321, -560)
fireproximityprompt(workspace.TheOffice.HallwaySection3:GetChildren()[7].Hook.ProximityPrompt)
end)

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local StarterGui = game:GetService("StarterGui")
local Camera = Workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local target = Workspace:WaitForChild("bossStorage"):WaitForChild("leftHand"):WaitForChild("PointerMimic")
local TOUCH_DISTANCE = 20
local CLICK_COOLDOWN = 0.5

_G.autoSlapEnabled = false

function toggleAutoSlap()
    _G.autoSlapEnabled = not _G.autoSlapEnabled

    StarterGui:SetCore("SendNotification", {
        Title = "Auto Slap Hand",
        Text = _G.autoSlapEnabled and "Enabled." or "Disabled.",
        Duration = 2
    })

    if _G.autoSlapEnabled then
        task.spawn(function()
            while _G.autoSlapEnabled do
                local distance = 1/0
                for _, partA in ipairs(Character:GetDescendants()) do
                    if partA:IsA("BasePart") then
                        for _, partB in ipairs(target:GetDescendants()) do
                            if partB:IsA("BasePart") then
                                local dist = (partA.Position - partB.Position).Magnitude
                                if dist < distance then
                                    distance = dist
                                end
                            end
                        end
                    end
                end

                if distance <= TOUCH_DISTANCE then
                    local screenPos = Camera:WorldToScreenPoint(target.Position)
                    VirtualInputManager:SendMouseButtonEvent(screenPos.X, screenPos.Y, 0, true, game, 0)
                    VirtualInputManager:SendMouseButtonEvent(screenPos.X, screenPos.Y, 0, false, game, 0)
                    task.wait(CLICK_COOLDOWN)
                else
                    task.wait(0.1)
                end
            end
        end)
    end
end

maintab:Button("Auto Slap Hand", toggleAutoSlap)

maintab:Button("Closest Nail", function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local nailFolder = Workspace:WaitForChild("bossStorage"):WaitForChild("nail")
local closestObject = nil
local minDist = math.huge

for _, obj in ipairs(nailFolder:GetChildren()) do
    if obj:IsA("BasePart") then
        local dist = (obj.Position - HRP.Position).Magnitude
        if dist < minDist then
            minDist = dist
            closestObject = obj
        end
    end
end

if closestObject then
    HRP.CFrame = CFrame.new(closestObject.Position)
end
end)


misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Nameless Admin", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
end)

misctab:Button("Rejoin Server", function()
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local placeId = game.PlaceId
local jobId = game.JobId
local player = Players.LocalPlayer or Players:GetPlayers()[1]

if typeof(placeId) == "number" and typeof(jobId) == "string" and player then
    print("Rejoining current server...")
    print("PlaceId:", placeId)
    print("JobId:", jobId)
    TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
else
    print("Failed to get current server info or player.")
end
end)

misctab:Button("Switch Servers", function()
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local placeId = game.PlaceId
local currentJobId = game.JobId
local player = Players.LocalPlayer or Players:GetPlayers()[1]

local function findDifferentServer()
    local cursor = nil

    while true do
        local url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", placeId)
        if cursor then
            url = url .. "&cursor=" .. cursor
        end

        local success, response = pcall(function()
            return http_request({
                Url = url,
                Method = "GET",
                Headers = {
                    ["User-Agent"] = "Mozilla/5.0"
                }
            })
        end)

        if not success or not response or not response.Body then
            print("Request failed. Retrying...")
            task.wait(2)
            continue
        end

        if string.find(response.Body, "Too many requests") then
            print("Rate limited. Waiting...")
            task.wait(3)
            continue
        end

        local successDecode, data = pcall(function()
            return HttpService:JSONDecode(response.Body)
        end)

        if not successDecode or not data or not data.data then
            print("Failed to decode. Retrying...")
            task.wait(2)
            continue
        end

        for _, server in pairs(data.data) do
            if server.id ~= currentJobId and server.playing < server.maxPlayers then
                print("Found different server:", server.id)
                return server.id
            end
        end

        cursor = data.nextPageCursor
        task.wait(1)

        if not cursor then break end
    end

    return nil
end

local newJobId = findDifferentServer()
if newJobId and player then
    print("Teleporting to different server...")
    TeleportService:TeleportToPlaceInstance(placeId, newJobId, player)
else
    print("No different server found or player missing.")
end
end)

misctab:Button("Join Small Server (MAY GET RATE LIMITED!)", function()
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

_G.extracted1 = game.PlaceId
_G.extracted2 = nil

local userAgents = {
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)",
    "Mozilla/5.0 (X11; Linux x86_64)",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)",
    "Mozilla/5.0 (Android 11; Mobile; rv:89.0)",
    "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko)",
    "Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko)",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/114.0.0.0 Safari/537.36"
}

local function fetchSmartServer()
    local cursor = nil
    local smallestServer = nil
    local minPlayers = math.huge
    local retryCount = 0

    while true do
        local baseUrl = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", _G.extracted1)
        local url = baseUrl
        if cursor then
            url = url .. "&cursor=" .. cursor
        end

        local headers = {
            ["User-Agent"] = userAgents[math.random(1, #userAgents)],
            ["X-Requested-With"] = "XMLHttpRequest"
        }

        local success, response = pcall(function()
            return http_request({
                Url = url,
                Method = "GET",
                Headers = headers
            })
        end)

        if not success or not response or not response.Body then
            print("Request failed. Retrying...")
            retryCount += 1
            task.wait(math.random(2, 4) + retryCount)
            continue
        end

        if string.find(response.Body, "Too many requests") then
            print("Rate limited. Backing off...")
            retryCount += 1
            task.wait(math.random(3, 6) + retryCount)
            continue
        end

        local successDecode, data = pcall(function()
            return HttpService:JSONDecode(response.Body)
        end)

        if not successDecode or not data or not data.data then
            print("Failed to decode server data. Retrying...")
            retryCount += 1
            task.wait(math.random(2, 5) + retryCount)
            continue
        end

        retryCount = 0

        for _, server in pairs(data.data) do
            print("Checking server:", server.id, "Players:", server.playing, "/", server.maxPlayers)

            if server.playing >= 1 and server.playing <= 2 and server.playing < server.maxPlayers then
                print("Found ideal server with 1–2 players. Joining now.")
                return server
            end

            if server.playing < minPlayers and server.playing < server.maxPlayers then
                minPlayers = server.playing
                smallestServer = server
            end
        end

        cursor = data.nextPageCursor
        task.wait(math.random(1, 2))

        if not cursor then break end
    end

    return smallestServer
end

local server = fetchSmartServer()
if server then
    _G.extracted2 = server.id
    print("Extracted PlaceId:", _G.extracted1)
    print("Extracted JobId:", _G.extracted2)

    local player = Players.LocalPlayer or Players:GetPlayers()[1]

    if typeof(_G.extracted1) == "number" and typeof(_G.extracted2) == "string" and player then
        print("Teleporting to server...")
        TeleportService:TeleportToPlaceInstance(_G.extracted1, _G.extracted2, player)
    else
        print("Invalid data or player not found.")
    end
else
    print("No suitable server found.")
end
end)

misctab:Button("Destroy GUI", function()
    win:Exit()
end)


misctab:Button("Leave Game", function()
    game:Shutdown()
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)
