local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local classic = 2092166489
local juggernaut = 4678052190
local endless = 2675280735
local infection = 1076129670

if game.PlaceId == classic then
local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()

local win = ui:Create({
    Name = "Celeron's GUI (SAKTK: Classic)",
    ThemeColor = Color3.fromRGB(20, 20, 20),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

local runService = game:GetService("RunService")
local players = game:GetService("Players")
local player = players.LocalPlayer

local currentConnection = nil
local deathConnection = nil

function applyEmulatedSpeed(speed)
	if currentConnection then currentConnection:Disconnect() end
	if deathConnection then deathConnection:Disconnect() end

	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	currentConnection = runService.RenderStepped:Connect(function()
		if not character or not character.Parent or humanoid.Health <= 0 then
			if currentConnection then currentConnection:Disconnect() end
			currentConnection = nil
			return
		end

		local moveDir = humanoid.MoveDirection
		if moveDir.Magnitude > 0 then
			local horizontalVelocity = Vector3.new(moveDir.X, 0, moveDir.Z).Unit * speed
			rootPart.Velocity = Vector3.new(horizontalVelocity.X, rootPart.Velocity.Y, horizontalVelocity.Z)
		end
	end)

	deathConnection = humanoid.Died:Connect(function()
		if currentConnection then currentConnection:Disconnect() end
		currentConnection = nil
	end)
end

maintab:Textbox("Player Speed", function(v)
	speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	player.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

maintab:Textbox("Gun Grabber", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, part in ipairs(model:GetDescendants()) do
			if part:IsA("BasePart") then
				return part
			end
		end
		return nil
	end

	local function runGunSequence(gunPart)
		if not gunPart then return end
		local position = gunPart.Position
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	runGunSequence(gunPart)
end)

maintab:Button("Kill All NPCs", function()
local Workspace = game:GetService("Workspace")

local killersFolder = Workspace:FindFirstChild("Killers")
if killersFolder then
	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			obj.Health = 0
		end
	end
end
end)

maintab:Button("Killer ESP", function()
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local function highlightKillers()
	local killersFolder = Workspace:FindFirstChild("Killers")
	if not killersFolder then return end

	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			local model = obj.Parent
			if model and not model:FindFirstChildOfClass("Highlight") then
				local hl = Instance.new("Highlight")
				hl.FillTransparency = 1
				hl.OutlineTransparency = 0
				hl.OutlineColor = Color3.fromRGB(255, 0, 0)
				hl.Adornee = model
				hl.Parent = model
			end
		end
	end
end

task.spawn(function()
	while true do
		highlightKillers()
		task.wait(1)
	end
end)
end)

maintab:Label("Gun Mods.")
local runService = game:GetService("RunService")
local players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local player = players.LocalPlayer

local model = workspace:WaitForChild("AREA51"):WaitForChild("PlantRoom"):WaitForChild("Box of Shells")
local box = model:WaitForChild("Box")
local originalCFrame = box.CFrame
local loopConnection
local infiniteAmmoEnabled = false

local function notifyy(title, text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 3
		})
	end)
end

local function ghostifyModel()
	for _, item in ipairs(model:GetDescendants()) do
		if item:IsA("BasePart") then
			item.Transparency = 1
			item.CanCollide = false
		elseif item:IsA("Decal") or item:IsA("SurfaceGui") then
			item.Transparency = 1
		end
	end
end

local function enableInfiniteAmmo()
	infiniteAmmoEnabled = true
	notifyy("Infinite Ammo", "Enabled.")
	ghostifyModel()
	box.Anchored = true
	box.CanCollide = false

	local toggle = false
	local lastToggle = 0

	loopConnection = runService.RenderStepped:Connect(function(dt)
		local char = player.Character
		if not char then return end

		local root = char:FindFirstChild("HumanoidRootPart")
		if not root then return end

		lastToggle += dt
		if lastToggle >= 0.5 then
			lastToggle = 0
			toggle = not toggle

			if toggle then
				local offset = Vector3.new(0, -(root.Size.Y / 2 + box.Size.Y / 2 + 0.1), 0)
				local position = root.Position + offset
				box.CFrame = CFrame.new(position)
			else
				box.CFrame = originalCFrame
			end
		end
	end)
end

local function disableInfiniteAmmo()
	infiniteAmmoEnabled = false
	notifyy("Infinite Ammo", "Disabled.")
	if loopConnection then
		loopConnection:Disconnect()
		loopConnection = nil
	end
	box.CFrame = originalCFrame
end

maintab:Button("Infinite Ammo", function()
	if infiniteAmmoEnabled then
		disableInfiniteAmmo()
	else
		enableInfiniteAmmo()
	end
end)

maintab:Button("Remove Doors (Client)", function()
for _, obj in pairs(game:GetService("Workspace"):GetDescendants()) do
    if obj.Name == "Door" then
        obj:Destroy()
    end
end
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Switch Servers", function()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
    local body = HttpService:JSONDecode(req)

    if body and body.data then
        for i, v in next, body.data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                table.insert(servers, 1, v.id)
            end
        end
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
end
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)

elseif game.PlaceId == endless then
local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()

local win = ui:Create({
    Name = "Celeron's GUI (SAKTK: Endless)",
    ThemeColor = Color3.fromRGB(20, 20, 20),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

local runService = game:GetService("RunService")
local players = game:GetService("Players")
local player = players.LocalPlayer

local currentConnection = nil

function applyEmulatedSpeed(speed)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	if currentConnection then currentConnection:Disconnect() end

	currentConnection = runService.RenderStepped:Connect(function(dt)
		if not character or not character.Parent or humanoid.Health <= 0 then
			currentConnection:Disconnect()
			currentConnection = nil
			return
		end

		local moveDir = humanoid.MoveDirection
		if moveDir.Magnitude > 0 then
			local horizontalVelocity = Vector3.new(moveDir.X, 0, moveDir.Z).Unit * speed
			rootPart.Velocity = Vector3.new(horizontalVelocity.X, rootPart.Velocity.Y, horizontalVelocity.Z)
		end
	end)

	humanoid.Died:Connect(function()
		if currentConnection then currentConnection:Disconnect() end
		currentConnection = nil
	end)
end

maintab:Textbox("Player Speed", function(v)
	local speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

local gunPositions = {
	["raygun"] = Vector3.new(114, 335, 569),
	["landmine"] = Vector3.new(243, 313, 332),
	["mp5k"] = Vector3.new(232, 373, 47),
	["awp"] = Vector3.new(466, 313, 756),
	["m4a1"] = Vector3.new(-154, 303, 703),
	["r870"] = Vector3.new(20, 292, 241),
	["freezegun"] = Vector3.new(307, 333, 709),
	["desert eagle"] = Vector3.new(171, 260, 406),
	["m14"] = Vector3.new(184, 314, 379),
	["mg42"] = Vector3.new(22, 313, 371),
	["svd"] = Vector3.new(159, 333, 445),
	["db shotgun"] = Vector3.new(106, 272, 101),
	["energy can"] = Vector3.new(173, 333, 587),
	["m16a2"] = Vector3.new(71, 282, 31),
	["m1911"] = Vector3.new(340, 313, 370)
}

maintab:Textbox("Gun Grabber (Legit, Requires Points!)", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, d in ipairs(model:GetDescendants()) do
			if d:IsA("BasePart") then
				return d
			end
		end
		return nil
	end

	local function runGunSequence(gunPart, position)
		if not gunPart then return end
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, gunPart.Position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.75)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	local gunPos = gunPositions[input]

	if gunModel and gunPart and gunPos then
		runGunSequence(gunPart, gunPos)
	else
		warn("Gun \"" .. v .. "\" not found or missing position.")
	end
end)

maintab:Button("Kill All NPCs", function()
local Workspace = game:GetService("Workspace")

local killersFolder = Workspace:FindFirstChild("Killers")
if killersFolder then
	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			obj.Health = 0
		end
	end
end
end)

maintab:Button("Enable Power", function()
game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(127, 323, 599)
game:GetService("Workspace").CurrentCamera.CFrame = CFrame.new(game:GetService("Workspace").CurrentCamera.CFrame.Position, game:GetService("Workspace").AREA51.ElectricityRoom.PowerManager.Interruptor.Base.Position)
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, false, game)
task.wait(3)
game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.E, false, game)
game:GetService("Workspace").Doors.Horizontal.ElectricityRoom.Door.Door:Destroy()
end)

maintab:Button("Remove Doors (Client)", function()
for _, obj in pairs(game:GetService("Workspace"):GetDescendants()) do
    if obj.Name == "Door" then
        obj:Destroy()
    end
end
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Switch Servers", function()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
    local body = HttpService:JSONDecode(req)

    if body and body.data then
        for i, v in next, body.data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                table.insert(servers, 1, v.id)
            end
        end
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
end
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)

elseif game.PlaceId == juggernaut then
local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()

local win = ui:Create({
    Name = "Celeron's GUI (SAKTK: Juggernaut)",
    ThemeColor = Color3.fromRGB(20, 20, 20),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

local runService = game:GetService("RunService")
local players = game:GetService("Players")
local player = players.LocalPlayer

local currentConnection = nil

function applyEmulatedSpeed(speed)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	if currentConnection then currentConnection:Disconnect() end

	currentConnection = runService.RenderStepped:Connect(function(dt)
		if not character or not character.Parent or humanoid.Health <= 0 then
			currentConnection:Disconnect()
			currentConnection = nil
			return
		end

		local moveDir = humanoid.MoveDirection
		if moveDir.Magnitude > 0 then
			local horizontalVelocity = Vector3.new(moveDir.X, 0, moveDir.Z).Unit * speed
			rootPart.Velocity = Vector3.new(horizontalVelocity.X, rootPart.Velocity.Y, horizontalVelocity.Z)
		end
	end)

	humanoid.Died:Connect(function()
		if currentConnection then currentConnection:Disconnect() end
		currentConnection = nil
	end)
end

maintab:Textbox("Player Speed", function(v)
	local speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

maintab:Label("Juggernaut Aimlock.")
players = game:GetService("Players")
runService = game:GetService("RunService")
input = game:GetService("UserInputService")
gui = game:GetService("StarterGui")
player = players.LocalPlayer
camera = workspace.CurrentCamera

getgenv().aimlockEnabled = false
getgenv().bindEnabled = false

aimConnection = nil
target = nil
bindConnection = nil

function notifyy(text)
	pcall(function()
		gui:SetCore("SendNotification", {Title = "Aimlock", Text = text, Duration = 2})
	end)
end

function getNearestTarget()
	local killers = workspace:FindFirstChild("Killers")
	if not killers then return end
	local character = player.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then return end
	local origin = character.HumanoidRootPart.Position
	local closest = nil
	local shortest = math.huge

	for _, model in ipairs(killers:GetChildren()) do
		if model:IsA("Model") and model.Name ~= "Zombie" then
			local humanoid = model:FindFirstChildOfClass("Humanoid")
			local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("UpperTorso") or model.PrimaryPart
			if humanoid and root then
				local distance = (root.Position - origin).Magnitude
				if distance < shortest then
					shortest = distance
					closest = model
				end
			end
		end
	end
	return closest
end

function aimAtTarget()
	if not getgenv().aimlockEnabled or not target then return end
	local part = target:FindFirstChild("HumanoidRootPart") or target:FindFirstChild("UpperTorso") or target.PrimaryPart
	if not part then return end
	local goal = part.Position
	local origin = camera.CFrame.Position
	camera.CFrame = CFrame.new(origin, origin + (goal - origin).Unit)
end

function toggleAimlock()
	getgenv().aimlockEnabled = not getgenv().aimlockEnabled
	if getgenv().aimlockEnabled then
		target = getNearestTarget()
		if target then
			if not aimConnection then aimConnection = runService.RenderStepped:Connect(aimAtTarget) end
			notifyy("Enabled.")
		else
			getgenv().aimlockEnabled = false
			notifyy("Disabled.")
		end
	else
		if aimConnection then aimConnection:Disconnect() aimConnection = nil end
		target = nil
		notifyy("Disabled.")
	end
end

maintab:Button("Aimlock", function()
	toggleAimlock()
end)

maintab:Button("Aimlock (Bind: M2)", function()
	getgenv().bindEnabled = not getgenv().bindEnabled
	if getgenv().bindEnabled then
		if not bindConnection then
			bindConnection = input.InputBegan:Connect(function(key, processed)
				if processed then return end
				if key.UserInputType == Enum.UserInputType.MouseButton2 then
					toggleAimlock()
				end
			end)
			notifyy("Keybind Enabled.")
		end
	else
		if bindConnection then
			bindConnection:Disconnect()
			bindConnection = nil
			notifyy("Keybind Disabled.")
		end
	end
end)

maintab:Label("Weapon Features.")

maintab:Button("Show Current Weapons", function()
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

local weaponsFolder = Workspace:FindFirstChild("Weapons")

local gunNames = {}

for _, obj in ipairs(weaponsFolder:GetChildren()) do
	if obj:IsA("Model") then
		table.insert(gunNames, obj.Name)
	end
end

local finalText = #gunNames > 0 and table.concat(gunNames, ", ") or "No guns found."

StarterGui:SetCore("SendNotification", {
	Title = "Current Weapons";
	Text = finalText;
	Duration = 10;
})
end)

local weaponESPEnabled = false
local activeESP = {}
local lastWeaponNames = {}
local currentRoot = nil

maintab:Button("Weapon ESP", function()
	weaponESPEnabled = not weaponESPEnabled

	local StarterGui = game:GetService("StarterGui")
	StarterGui:SetCore("SendNotification", {
		Title = "Weapon ESP",
		Text = weaponESPEnabled and "Enabled." or "Disabled.",
		Duration = 3
	})

	local player = game.Players.LocalPlayer
	local weaponsFolder = workspace:FindFirstChild("Weapons")
	if not weaponsFolder then return end

	local function updateRoot()
		local char = player.Character or player.CharacterAdded:Wait()
		local root = char:WaitForChild("HumanoidRootPart")
		currentRoot = root

		local humanoid = char:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.Died:Connect(function()
				currentRoot = nil
				player.CharacterAdded:Wait():WaitForChild("HumanoidRootPart")
				task.wait(0.5)
				updateRoot()
				if weaponESPEnabled then
					createESP()
				end
			end)
		end

		root:GetPropertyChangedSignal("Parent"):Connect(function()
			if not root:IsDescendantOf(workspace) then
				task.wait(0.5)
				updateRoot()
			end
		end)
	end

	updateRoot()
	player.CharacterAdded:Connect(function()
		task.wait(0.5)
		updateRoot()
		if weaponESPEnabled then
			createESP()
		end
	end)

	local function clearESP()
		for _, gui in pairs(activeESP) do
			if gui and gui.Parent then
				gui:Destroy()
			end
		end
		activeESP = {}
	end

	local function createESP()
		clearESP()
		lastWeaponNames = {}
		for _, obj in ipairs(weaponsFolder:GetChildren()) do
			if obj:IsA("Model") then
				table.insert(lastWeaponNames, obj.Name)
				local part = obj:FindFirstChildWhichIsA("BasePart")
				if part then
					local gui = Instance.new("BillboardGui")
					gui.Size = UDim2.new(0, 100, 0, 30)
					gui.StudsOffset = Vector3.new(0, 3, 0)
					gui.AlwaysOnTop = true
					gui.Adornee = part
					gui.Parent = part

					local nameLabel = Instance.new("TextLabel")
					nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
					nameLabel.Position = UDim2.new(0, 0, 0, 0)
					nameLabel.BackgroundTransparency = 1
					nameLabel.TextColor3 = Color3.new(1, 1, 1)
					nameLabel.TextScaled = true
					nameLabel.Font = Enum.Font.Arial
					nameLabel.Text = obj.Name
					nameLabel.Parent = gui

					local distLabel = Instance.new("TextLabel")
					distLabel.Size = UDim2.new(1, 0, 0.5, 0)
					distLabel.Position = UDim2.new(0, 0, 0.5, 0)
					distLabel.BackgroundTransparency = 1
					distLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
					distLabel.TextScaled = true
					distLabel.Font = Enum.Font.Code
					distLabel.Text = "..."
					distLabel.Parent = gui

					table.insert(activeESP, gui)

					task.spawn(function()
						while gui.Parent and weaponESPEnabled do
							if currentRoot then
								local dist = (part.Position - currentRoot.Position).Magnitude
								distLabel.Text = math.floor(dist) .. " studs"
							end
							task.wait()
						end
					end)
				end
			end
		end
	end

	local function weaponsChanged()
		local currentNames = {}
		for _, obj in ipairs(weaponsFolder:GetChildren()) do
			if obj:IsA("Model") then
				table.insert(currentNames, obj.Name)
			end
		end
		if #currentNames ~= #lastWeaponNames then return true end
		for i, name in ipairs(currentNames) do
			if name ~= lastWeaponNames[i] then return true end
		end
		return false
	end

	task.spawn(function()
		while true do
			if weaponESPEnabled and weaponsChanged() then
				createESP()
			end
			task.wait(3)
		end
	end)

	if weaponESPEnabled then
		createESP()
	end
end)

maintab:Textbox("Obtain Gun", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, part in ipairs(model:GetDescendants()) do
			if part:IsA("BasePart") then
				return part
			end
		end
		return nil
	end

	local function runGunSequence(gunPart)
		if not gunPart then return end
		local position = gunPart.Position
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	runGunSequence(gunPart)
end)

maintab:Label("Auto Win Features.")

maintab:Button("Juggernaut Auto-Win (Blatant)", function()
	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")
	local StarterGui = game:GetService("StarterGui")

	local LocalPlayer = Players.LocalPlayer
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local localRoot = character:WaitForChild("HumanoidRootPart")

	_G.LoopKillEnabled = not _G.LoopKillEnabled
	local visited = {}
	local running = false

	local function isDead(player)
		local char = player.Character
		local hum = char and char:FindFirstChildOfClass("Humanoid")
		return not (hum and hum.Health > 0)
	end

	local function teleportTo(player)
		local targetChar = player.Character
		local targetRoot = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
		if localRoot and targetRoot then
			localRoot.CFrame = targetRoot.CFrame + Vector3.new(2, 0, 0)
		end
	end

	local function sendNotification(state)
		StarterGui:SetCore("SendNotification", {
			Title = "Juggernaut Kill";
			Text = state and "Enabled." or "Disabled.";
			Duration = 5;
		})
	end

	local function startLoopKill()
		if running then return end
		running = true
		visited = {}
		sendNotification(true)

		task.spawn(function()
			while _G.LoopKillEnabled do
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= LocalPlayer and not visited[player] then
						repeat
							if not _G.LoopKillEnabled then
								running = false
								visited = {}
								sendNotification(false)
								return
							end

							if isDead(player) then
								visited[player] = true
							else
								teleportTo(player)
							end
							task.wait(0.05)
						until visited[player]
					end
				end

				if #Players:GetPlayers() - 1 == #visited then
					running = false
					sendNotification(false)
					break
				end

				task.wait(1)
			end

			running = false
			visited = {}
			sendNotification(false)
		end)
	end

	if _G.LoopKillEnabled then
		startLoopKill()
	else
		sendNotification(false)
	end
end)

maintab:Button("Survivor Auto-Win (Blatant)", function()
game.Players.LocalPlayer.Character:PivotTo(CFrame.new(112,335,56))
end)

maintab:Label("Survivor-Only Features.")

local runService = game:GetService("RunService")
local players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local player = players.LocalPlayer

local model = workspace:WaitForChild("AREA51"):WaitForChild("PlantRoom"):WaitForChild("Box of Shells")
local box = model:WaitForChild("Box")
local originalCFrame = box.CFrame
local loopConnection
local infiniteAmmoEnabled = false

local function notifyy(title, text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 3
		})
	end)
end

local function ghostifyModel()
	for _, item in ipairs(model:GetDescendants()) do
		if item:IsA("BasePart") then
			item.Transparency = 1
			item.CanCollide = false
		elseif item:IsA("Decal") or item:IsA("SurfaceGui") then
			item.Transparency = 1
		end
	end
end

local function enableInfiniteAmmo()
	infiniteAmmoEnabled = true
	notifyy("Infinite Ammo", "Enabled.")
	ghostifyModel()
	box.Anchored = true
	box.CanCollide = false

	local toggle = false
	local lastToggle = 0

	loopConnection = runService.RenderStepped:Connect(function(dt)
		local char = player.Character
		if not char then return end

		local root = char:FindFirstChild("HumanoidRootPart")
		if not root then return end

		lastToggle += dt
		if lastToggle >= 0.1 then
			lastToggle = 0
			toggle = not toggle

			if toggle then
				local offset = Vector3.new(0, -(root.Size.Y / 2 + box.Size.Y / 2 + 0.1), 0)
				local position = root.Position + offset
				box.CFrame = CFrame.new(position)
			else
				box.CFrame = originalCFrame
			end
		end
	end)
end

local function disableInfiniteAmmo()
	infiniteAmmoEnabled = false
	notifyy("Infinite Ammo", "Disabled.")
	if loopConnection then
		loopConnection:Disconnect()
		loopConnection = nil
	end
	box.CFrame = originalCFrame
end

maintab:Button("Infinite Ammo", function()
	if infiniteAmmoEnabled then
		disableInfiniteAmmo()
	else
		enableInfiniteAmmo()
	end
end)

maintab:Button("TP To Juggernaut", function()
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

for _, player in ipairs(Players:GetPlayers()) do
	if player ~= localPlayer and player.Character then
		local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
		local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")

		if humanoid and targetRoot and humanoid.Health > 200 then
			humanoidRootPart.CFrame = targetRoot.CFrame + Vector3.new(2, 2, 2)
			break
		end
	end
end
end)

maintab:Button("Juggernaut Health Bar", function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "BossHealthBars"
screenGui.ResetOnSpawn = false

local function createHealthBar(model)
	local humanoid = model:FindFirstChildOfClass("Humanoid")
	if not humanoid then return end
	if screenGui:FindFirstChild(model.Name .. "_Bar") then return end

	local displayName = model.Name
	for _, p in ipairs(Players:GetPlayers()) do
		if p.Character == model then
			displayName = p.DisplayName
			break
		end
	end

	local frame = Instance.new("Frame")
	frame.Name = model.Name .. "_Bar"
	frame.Size = UDim2.new(0.4, 0, 0, 30)
	frame.Position = UDim2.new(0.3, 0, 0.05, 0)
	frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
	frame.BorderSizePixel = 0
	frame.Parent = screenGui

	local fill = Instance.new("Frame")
	fill.Name = "HealthFill"
	fill.Size = UDim2.new(1, 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	fill.BorderSizePixel = 0
	fill.Parent = frame

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.new(1, 1, 1)
	label.TextScaled = true
	label.Font = Enum.Font.Fantasy
	label.Text = displayName .. " - " .. math.floor(humanoid.Health) .. " / " .. math.floor(humanoid.MaxHealth)
	label.Parent = frame

	task.spawn(function()
		while humanoid and humanoid.Parent and humanoid.Health > 0 do
			local ratio = humanoid.Health / humanoid.MaxHealth
			fill.Size = UDim2.new(ratio, 0, 1, 0)
			label.Text = displayName .. " - " .. math.floor(humanoid.Health) .. " / " .. math.floor(humanoid.MaxHealth)
			task.wait(0.2)
		end
		frame:Destroy()
	end)
end

task.spawn(function()
	while true do
		local killersFolder = workspace:FindFirstChild("Killers")
		if killersFolder then
			local models = {}
			for _, model in ipairs(killersFolder:GetChildren()) do
				if model:IsA("Model") and model:FindFirstChildOfClass("Humanoid") then
					table.insert(models, model)
				end
			end

			if #models == 1 and models[1].Name == "Zombie" then
				createHealthBar(models[1])
			else
				for _, model in ipairs(models) do
					if model.Name ~= "Zombie" then
						createHealthBar(model)
					end
				end
			end
		end
		task.wait(1)
	end
end)
end)

maintab:Button("Juggernaut ESP", function()
	local RunService = game:GetService("RunService")
	local killersFolder = workspace:FindFirstChild("Killers")

	RunService.RenderStepped:Connect(function()
		if not killersFolder then return end

		for _, model in ipairs(killersFolder:GetChildren()) do
			if model:IsA("Model") then
				local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
				if root then
					local tagName = "JuggernautESP"

					if not model:FindFirstChild(tagName) then
						local highlight = Instance.new("Highlight")
						highlight.Name = tagName
						highlight.Adornee = model
						highlight.FillTransparency = 1
						highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
						highlight.OutlineTransparency = 0
						highlight.Parent = model
					end

					if not root:FindFirstChild("JuggernautTag") then
						local billboard = Instance.new("BillboardGui")
						billboard.Name = "JuggernautTag"
						billboard.Adornee = root
						billboard.Size = UDim2.new(0, 100, 0, 20)
						billboard.StudsOffset = Vector3.new(0, 2.5, 0)
						billboard.AlwaysOnTop = true
						billboard.LightInfluence = 0
						billboard.Parent = root

						local nameLabel = Instance.new("TextLabel")
						nameLabel.Size = UDim2.new(1, 0, 1, 0)
						nameLabel.BackgroundTransparency = 1
						nameLabel.Text = model.Name
						nameLabel.TextColor3 = Color3.new(1, 1, 1)
						nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
						nameLabel.TextStrokeTransparency = 0
						nameLabel.TextScaled = true
						nameLabel.Font = Enum.Font.Arial
						nameLabel.Parent = billboard
					end
				end
			end
		end
	end)
end)

maintab:Label("Other Features.")

maintab:Button("Pack-A-Punch", function()
local p = game.Players.LocalPlayer
local c = p.Character or p.CharacterAdded:Wait()
local vim = game:GetService("VirtualInputManager")

c:PivotTo(CFrame.new(111, 317, 73))

task.delay(0.2, function()
	vim:SendKeyEvent(true, Enum.KeyCode.E, false, game)
	vim:SendKeyEvent(false, Enum.KeyCode.E, false, game)

	task.delay(0.1, function()
		c:PivotTo(CFrame.new(112, 317, 42))
	end)
end)
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Switch Servers", function()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
    local body = HttpService:JSONDecode(req)

    if body and body.data then
        for i, v in next, body.data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                table.insert(servers, 1, v.id)
            end
        end
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
end
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)

elseif game.PlaceId == infection then
local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()

local win = ui:Create({
    Name = "Celeron's GUI (SAKTK: Infection)",
    ThemeColor = Color3.fromRGB(20, 20, 20),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local maintab = win:Tab("Main")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

maintab:Label("Script Made By Celeron + Daffy!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

local runService = game:GetService("RunService")
local players = game:GetService("Players")
local player = players.LocalPlayer

local currentConnection = nil

function applyEmulatedSpeed(speed)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	if currentConnection then currentConnection:Disconnect() end

	currentConnection = runService.RenderStepped:Connect(function(dt)
		if not character or not character.Parent or humanoid.Health <= 0 then
			currentConnection:Disconnect()
			currentConnection = nil
			return
		end

		local moveDir = humanoid.MoveDirection
		if moveDir.Magnitude > 0 then
			local horizontalVelocity = Vector3.new(moveDir.X, 0, moveDir.Z).Unit * speed
			rootPart.Velocity = Vector3.new(horizontalVelocity.X, rootPart.Velocity.Y, horizontalVelocity.Z)
		end
	end)

	humanoid.Died:Connect(function()
		if currentConnection then currentConnection:Disconnect() end
		currentConnection = nil
	end)
end

maintab:Textbox("Player Speed", function(v)
	local speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

maintab:Label("Weapon Features.")

maintab:Button("Show Current Weapons", function()
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

local weaponsFolder = Workspace:FindFirstChild("Weapons")

local gunNames = {}

for _, obj in ipairs(weaponsFolder:GetChildren()) do
	if obj:IsA("Model") then
		table.insert(gunNames, obj.Name)
	end
end

local finalText = #gunNames > 0 and table.concat(gunNames, ", ") or "No guns found."

StarterGui:SetCore("SendNotification", {
	Title = "Current Weapons";
	Text = finalText;
	Duration = 10;
})
end)

local weaponESPEnabled = false
local activeESP = {}
local lastWeaponNames = {}
local currentRoot = nil

maintab:Button("Weapon ESP", function()
	weaponESPEnabled = not weaponESPEnabled

	local StarterGui = game:GetService("StarterGui")
	StarterGui:SetCore("SendNotification", {
		Title = "Weapon ESP",
		Text = weaponESPEnabled and "Enabled." or "Disabled.",
		Duration = 3
	})

	local player = game.Players.LocalPlayer
	local weaponsFolder = workspace:FindFirstChild("Weapons")
	if not weaponsFolder then return end

	local function updateRoot()
		local char = player.Character or player.CharacterAdded:Wait()
		local root = char:WaitForChild("HumanoidRootPart")
		currentRoot = root

		local humanoid = char:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.Died:Connect(function()
				currentRoot = nil
				player.CharacterAdded:Wait():WaitForChild("HumanoidRootPart")
				task.wait(0.5)
				updateRoot()
				if weaponESPEnabled then
					createESP()
				end
			end)
		end

		root:GetPropertyChangedSignal("Parent"):Connect(function()
			if not root:IsDescendantOf(workspace) then
				task.wait(0.5)
				updateRoot()
			end
		end)
	end

	updateRoot()
	player.CharacterAdded:Connect(function()
		task.wait(0.5)
		updateRoot()
		if weaponESPEnabled then
			createESP()
		end
	end)

	local function clearESP()
		for _, gui in pairs(activeESP) do
			if gui and gui.Parent then
				gui:Destroy()
			end
		end
		activeESP = {}
	end

	local function createESP()
		clearESP()
		lastWeaponNames = {}
		for _, obj in ipairs(weaponsFolder:GetChildren()) do
			if obj:IsA("Model") then
				table.insert(lastWeaponNames, obj.Name)
				local part = obj:FindFirstChildWhichIsA("BasePart")
				if part then
					local gui = Instance.new("BillboardGui")
					gui.Size = UDim2.new(0, 100, 0, 30)
					gui.StudsOffset = Vector3.new(0, 3, 0)
					gui.AlwaysOnTop = true
					gui.Adornee = part
					gui.Parent = part

					local nameLabel = Instance.new("TextLabel")
					nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
					nameLabel.Position = UDim2.new(0, 0, 0, 0)
					nameLabel.BackgroundTransparency = 1
					nameLabel.TextColor3 = Color3.new(1, 1, 1)
					nameLabel.TextScaled = true
					nameLabel.Font = Enum.Font.Arial
					nameLabel.Text = obj.Name
					nameLabel.Parent = gui

					local distLabel = Instance.new("TextLabel")
					distLabel.Size = UDim2.new(1, 0, 0.5, 0)
					distLabel.Position = UDim2.new(0, 0, 0.5, 0)
					distLabel.BackgroundTransparency = 1
					distLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
					distLabel.TextScaled = true
					distLabel.Font = Enum.Font.Code
					distLabel.Text = "..."
					distLabel.Parent = gui

					table.insert(activeESP, gui)

					task.spawn(function()
						while gui.Parent and weaponESPEnabled do
							if currentRoot then
								local dist = (part.Position - currentRoot.Position).Magnitude
								distLabel.Text = math.floor(dist) .. " studs"
							end
							task.wait()
						end
					end)
				end
			end
		end
	end

	local function weaponsChanged()
		local currentNames = {}
		for _, obj in ipairs(weaponsFolder:GetChildren()) do
			if obj:IsA("Model") then
				table.insert(currentNames, obj.Name)
			end
		end
		if #currentNames ~= #lastWeaponNames then return true end
		for i, name in ipairs(currentNames) do
			if name ~= lastWeaponNames[i] then return true end
		end
		return false
	end

	task.spawn(function()
		while true do
			if weaponESPEnabled and weaponsChanged() then
				createESP()
			end
			task.wait(3)
		end
	end)

	if weaponESPEnabled then
		createESP()
	end
end)

maintab:Textbox("Obtain Gun", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, part in ipairs(model:GetDescendants()) do
			if part:IsA("BasePart") then
				return part
			end
		end
		return nil
	end

	local function runGunSequence(gunPart)
		if not gunPart then return end
		local position = gunPart.Position
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	runGunSequence(gunPart)
end)

maintab:Label("Aimlock Features.")
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local input = game:GetService("UserInputService")
local gui = game:GetService("StarterGui")
local player = players.LocalPlayer
local camera = workspace.CurrentCamera

getgenv().aimlockEnabled = false
getgenv().bindEnabled = false

local aimConnection = nil
local target = nil
local bindConnection = nil

local function notifyy(text)
	pcall(function()
		gui:SetCore("SendNotification", {Title = "Aimlock", Text = text, Duration = 2})
	end)
end

local function getNearestTarget()
	local killers = workspace:FindFirstChild("Killers")
	if not killers then return end
	local char = player.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end
	local origin = char.HumanoidRootPart.Position
	local closest, shortest = nil, math.huge

	for _, model in ipairs(killers:GetChildren()) do
		if model:IsA("Model") then
			local hum = model:FindFirstChildOfClass("Humanoid")
			local root = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("UpperTorso") or model.PrimaryPart
			if hum and hum.Health > 0 and root then
				local dist = (root.Position - origin).Magnitude
				if dist < shortest then
					shortest = dist
					closest = model
				end
			end
		end
	end
	return closest
end

local function aimAtTarget()
	if not getgenv().aimlockEnabled then return end

	local valid = target and target:FindFirstChildOfClass("Humanoid") and target:FindFirstChildOfClass("Humanoid").Health > 0
	if not valid then
		local newTarget = getNearestTarget()
		if newTarget and newTarget ~= target then
			target = newTarget
			notifyy("Switched to: " .. target.Name)
		else
			target = nil
			return
		end
	end

	if not target then return end
	local part = target:FindFirstChild("HumanoidRootPart") or target:FindFirstChild("UpperTorso") or target.PrimaryPart
	if not part then return end
	camera.CFrame = CFrame.new(camera.CFrame.Position, part.Position)
end

local function toggleAimlock()
	getgenv().aimlockEnabled = not getgenv().aimlockEnabled
	if getgenv().aimlockEnabled then
		target = getNearestTarget()
		if target then
			if not aimConnection then aimConnection = runService.RenderStepped:Connect(aimAtTarget) end
			notifyy("Aimlock Enabled.")
		else
			getgenv().aimlockEnabled = false
			notifyy("No target. Disabled.")
		end
	else
		if aimConnection then aimConnection:Disconnect() aimConnection = nil end
		target = nil
		notifyy("Aimlock Disabled.")
	end
end

maintab:Button("Aimlock", function()
	toggleAimlock()
end)

maintab:Button("Aimlock (Bind: M2)", function()
	getgenv().bindEnabled = not getgenv().bindEnabled
	if getgenv().bindEnabled then
		if not bindConnection then
			bindConnection = input.InputBegan:Connect(function(key, processed)
				if processed then return end
				if key.UserInputType == Enum.UserInputType.MouseButton2 then
					toggleAimlock()
				end
			end)
			notifyy("Keybind Enabled.")
		end
	else
		if bindConnection then
			bindConnection:Disconnect()
			bindConnection = nil
			notifyy("Keybind Disabled.")
		end
	end
end)

maintab:Label("Visual Features.")
maintab:Button("Killer ESP", function()
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local function highlightKillers()
	local killersFolder = Workspace:FindFirstChild("Killers")
	if not killersFolder then return end

	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			local model = obj.Parent
			if model and not model:FindFirstChildOfClass("Highlight") then
				local hl = Instance.new("Highlight")
				hl.FillTransparency = 1
				hl.OutlineTransparency = 0
				hl.OutlineColor = Color3.fromRGB(255, 0, 0)
				hl.Adornee = model
				hl.Parent = model
			end
		end
	end
end

task.spawn(function()
	while true do
		highlightKillers()
		task.wait(1)
	end
end)
end)

maintab:Label("Gun Mods.")
local runService = game:GetService("RunService")
local players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local player = players.LocalPlayer

local model = workspace:WaitForChild("AREA51"):WaitForChild("PlantRoom"):WaitForChild("Box of Shells")
local box = model:WaitForChild("Box")
local originalCFrame = box.CFrame
local loopConnection
local infiniteAmmoEnabled = false

local function notifyy(title, text)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 3
		})
	end)
end

local function ghostifyModel()
	for _, item in ipairs(model:GetDescendants()) do
		if item:IsA("BasePart") then
			item.Transparency = 1
			item.CanCollide = false
		elseif item:IsA("Decal") or item:IsA("SurfaceGui") then
			item.Transparency = 1
		end
	end
end

local function enableInfiniteAmmo()
	infiniteAmmoEnabled = true
	notifyy("Infinite Ammo", "Enabled.")
	ghostifyModel()
	box.Anchored = true
	box.CanCollide = false

	local toggle = false
	local lastToggle = 0

	loopConnection = runService.RenderStepped:Connect(function(dt)
		local char = player.Character
		if not char then return end

		local root = char:FindFirstChild("HumanoidRootPart")
		if not root then return end

		lastToggle += dt
		if lastToggle >= 0.5 then
			lastToggle = 0
			toggle = not toggle

			if toggle then
				local offset = Vector3.new(0, -(root.Size.Y / 2 + box.Size.Y / 2 + 0.1), 0)
				local position = root.Position + offset
				box.CFrame = CFrame.new(position)
			else
				box.CFrame = originalCFrame
			end
		end
	end)
end

local function disableInfiniteAmmo()
	infiniteAmmoEnabled = false
	notifyy("Infinite Ammo", "Disabled.")
	if loopConnection then
		loopConnection:Disconnect()
		loopConnection = nil
	end
	box.CFrame = originalCFrame
end

maintab:Button("Infinite Ammo", function()
	if infiniteAmmoEnabled then
		disableInfiniteAmmo()
	else
		enableInfiniteAmmo()
	end
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Switch Servers", function()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
    local body = HttpService:JSONDecode(req)

    if body and body.data then
        for i, v in next, body.data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                table.insert(servers, 1, v.id)
            end
        end
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
end
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)
end
