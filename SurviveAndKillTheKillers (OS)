local ui = loadstring(game:HttpGet("https://pastebin.com/raw/wk7ZrGyr"))()

local win = ui:Create({
    Name = "Celeron's GUI (SAKTK)",
    ThemeColor = Color3.fromRGB(20, 20, 20),
    StartupSound = "rbxassetid://6958727243",
    ThemeFont = Enum.Font.FredokaOne
})

local classtab = win:Tab("Classic")
local juggtab = win:Tab("Juggernaut")
local endtab = win:Tab("Endless")
local misctab = win:Tab("Others")
local helptab = win:Tab("Info")

classtab:Label("Script Made By Celeron + Daffy!")
juggtab:Label("Anti-Cheat Bypassed By Celeron!")
endtab:Label("Endless Scripts By Celeron!")
helptab:Label("GUI Controls Are Below, Script Credits Are At The Bottom!")
helptab:Label("Show / Hide GUI: Right Alt")

local function applyEmulatedSpeed(speed)
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	for _, force in pairs(rootPart:GetChildren()) do
		if force:IsA("BodyVelocity") or force:IsA("VectorForce") then
			force:Destroy()
		end
	end

	local bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.MaxForce = Vector3.new(1e5, 0, 1e5)
	bodyVelocity.P = 1250
	bodyVelocity.Velocity = Vector3.zero
	bodyVelocity.Name = "EmulatedWalkSpeed"
	bodyVelocity.Parent = rootPart

	local runService = game:GetService("RunService")
	local connection

	connection = runService.RenderStepped:Connect(function()
		if not character or not character.Parent then
			connection:Disconnect()
			return
		end
		bodyVelocity.Velocity = humanoid.MoveDirection * speed
	end)
end

classtab:Textbox("Player Speed (Velocity)", function(v)
	local speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

classtab:Textbox("Gun Grabber", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, part in ipairs(model:GetDescendants()) do
			if part:IsA("BasePart") then
				return part
			end
		end
		return nil
	end

	local function runGunSequence(gunPart)
		if not gunPart then return end
		local position = gunPart.Position
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	runGunSequence(gunPart)
end)

classtab:Button("Kill All NPCs", function()
local Workspace = game:GetService("Workspace")

local killersFolder = Workspace:FindFirstChild("Killers")
if killersFolder then
	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			obj.Health = 0
		end
	end
end
end)

classtab:Button("Killer ESP", function()
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local function highlightKillers()
	local killersFolder = Workspace:FindFirstChild("Killers")
	if not killersFolder then return end

	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			local model = obj.Parent
			if model and not model:FindFirstChildOfClass("Highlight") then
				local hl = Instance.new("Highlight")
				hl.FillTransparency = 1
				hl.OutlineTransparency = 0
				hl.OutlineColor = Color3.fromRGB(255, 0, 0)
				hl.Adornee = model
				hl.Parent = model
			end
		end
	end
end

task.spawn(function()
	while true do
		highlightKillers()
		task.wait(1)
	end
end)
end)

classtab:Button("Remove Doors (Client)", function()
for _, obj in pairs(game:GetService("Workspace"):GetDescendants()) do
    if obj.Name == "Door" then
        obj:Destroy()
    end
end
end)

juggtab:Textbox("Player Speed (Velocity)", function(v)
	local speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

endtab:Textbox("Player Speed (Velocity)", function(v)
	local speed = tonumber(v)
	if not speed then return end

	applyEmulatedSpeed(speed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		task.wait(0.25)
		applyEmulatedSpeed(speed)
	end)
end)

juggtab:Textbox("Gun Grabber (MUST BE SPAWNED)", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, part in ipairs(model:GetDescendants()) do
			if part:IsA("BasePart") then
				return part
			end
		end
		return nil
	end

	local function runGunSequence(gunPart)
		if not gunPart then return end
		local position = gunPart.Position
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	runGunSequence(gunPart)
end)

local P = game:GetService("Players")
local R = game:GetService("RunService")
local S = game:GetService("StarterGui")
local LP = P.LocalPlayer
local C = workspace.CurrentCamera

getgenv().AimlockEnabled = getgenv().AimlockEnabled or false
local conn, tgt

local function notify(t)
    pcall(function()
        S:SetCore("SendNotification", {Title="Aimlock",Text=t,Duration=2})
    end)
end

local function nearest()
    local k = workspace:FindFirstChild("Killers")
    if not k then return end
    local c = LP.Character
    if not c or not c:FindFirstChild("HumanoidRootPart") then return end
    local p, d, m = c.HumanoidRootPart.Position, math.huge
    for _, v in ipairs(k:GetChildren()) do
        if v:IsA("Model") then
            local h = v:FindFirstChildOfClass("Humanoid")
            local r = v:FindFirstChild("HumanoidRootPart") or v:FindFirstChild("UpperTorso") or v.PrimaryPart
            if h and r then
                local dist = (r.Position - p).Magnitude
                if dist < d then d, m = dist, v end
            end
        end
    end
    return m
end

local function aim()
    if not getgenv().AimlockEnabled or not tgt then return end
    local part = tgt:FindFirstChild("HumanoidRootPart") or tgt:FindFirstChild("UpperTorso") or tgt.PrimaryPart
    if not part then return end
    local tp, cp = part.Position, C.CFrame.Position
    C.CFrame = CFrame.new(cp, cp + (tp - cp).Unit)
end

local function toggle()
    getgenv().AimlockEnabled = not getgenv().AimlockEnabled
    if getgenv().AimlockEnabled then
        tgt = nearest()
        if tgt then
            if not conn then conn = R.RenderStepped:Connect(aim) end
            notify("Enabled.")
        else
            getgenv().AimlockEnabled = false
            notify("No killer found.")
        end
    else
        if conn then conn:Disconnect() conn = nil end
        tgt = nil
        notify("Disabled.")
    end
end

juggtab:Button("Aimlock", toggle)

game:GetService("UserInputService").InputBegan:Connect(function(i,g)
    if g then return end
    if i.UserInputType == Enum.UserInputType.MouseButton2 then
        toggle()
    end
end)

juggtab:Button("Show Current Weapons", function()
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

local weaponsFolder = Workspace:FindFirstChild("Weapons")
if not weaponsFolder then
	StarterGui:SetCore("SendNotification", {
		Title = "Possible Guns";
		Text = "Weapons folder not found.";
		Duration = 5;
	})
	return
end

local gunNames = {}

for _, obj in ipairs(weaponsFolder:GetChildren()) do
	if obj:IsA("Model") then
		table.insert(gunNames, obj.Name)
	end
end

local finalText = #gunNames > 0 and table.concat(gunNames, ", ") or "No guns found."

StarterGui:SetCore("SendNotification", {
	Title = "Current Weapons";
	Text = finalText;
	Duration = 10;
})
end)

juggtab:Button("Win As Juggernaut", function()
	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")
	local StarterGui = game:GetService("StarterGui")

	local LocalPlayer = Players.LocalPlayer
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local localRoot = character:WaitForChild("HumanoidRootPart")

	_G.LoopKillEnabled = not _G.LoopKillEnabled
	local visited = {}
	local running = false

	local function isDead(player)
		local char = player.Character
		local hum = char and char:FindFirstChildOfClass("Humanoid")
		return not (hum and hum.Health > 0)
	end

	local function teleportTo(player)
		local targetChar = player.Character
		local targetRoot = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
		if localRoot and targetRoot then
			localRoot.CFrame = targetRoot.CFrame + Vector3.new(2, 0, 0)
		end
	end

	local function sendNotification(state)
		StarterGui:SetCore("SendNotification", {
			Title = "Juggernaut Kill";
			Text = state and "Enabled." or "Disabled.";
			Duration = 5;
		})
	end

	local function startLoopKill()
		if running then return end
		running = true
		visited = {}
		sendNotification(true)

		task.spawn(function()
			while _G.LoopKillEnabled do
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= LocalPlayer and not visited[player] then
						repeat
							if not _G.LoopKillEnabled then
								running = false
								visited = {}
								sendNotification(false)
								return
							end

							if isDead(player) then
								visited[player] = true
							else
								teleportTo(player)
							end
							task.wait(0.05)
						until visited[player]
					end
				end

				if #Players:GetPlayers() - 1 == #visited then
					running = false
					sendNotification(false)
					break
				end

				task.wait(1)
			end

			running = false
			visited = {}
			sendNotification(false)
		end)
	end

	if _G.LoopKillEnabled then
		startLoopKill()
	else
		sendNotification(false)
	end
end)

juggtab:Button("Wall Gun (Random)", function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

local weaponsFolder = workspace:WaitForChild("Weapons")
local candidateModels = {}

for _, model in pairs(weaponsFolder:GetDescendants()) do
	if model:IsA("Model") and (model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")) then
		table.insert(candidateModels, model)
	end
end

table.sort(candidateModels, function(a, b)
	local priorityList = { "Raygun", "M4A1" }
	local function getPriority(model)
		for i, name in ipairs(priorityList) do
			if model.Name:lower() == name then
				return #priorityList - i + 1
			end
		end
		return 0
	end
	return getPriority(a) > getPriority(b)
end)

if #candidateModels > 0 then
	local weightTop = math.min(3, #candidateModels)
	local chosenIndex = math.random() < 0.6 and math.random(1, weightTop) or math.random(1, #candidateModels)
	local chosenModel = candidateModels[chosenIndex]

	if not chosenModel.PrimaryPart then
		chosenModel.PrimaryPart = chosenModel:FindFirstChildWhichIsA("BasePart")
	end

	if chosenModel.PrimaryPart then
		local baseCFrame = chosenModel:GetPrimaryPartCFrame()
		local forward = baseCFrame.LookVector.Unit
		local destination = baseCFrame.Position + forward * 3
		root.CFrame = CFrame.new(destination, destination + forward)
	end
end
end)

juggtab:Button("Juggernaut TP", function()
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

for _, player in ipairs(Players:GetPlayers()) do
	if player ~= localPlayer and player.Character then
		local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
		local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")

		if humanoid and targetRoot and humanoid.Health > 200 then
			humanoidRootPart.CFrame = targetRoot.CFrame + Vector3.new(1, 1, 1)
			break
		end
	end
end
end)

juggtab:Button("Juggernaut ESP", function()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

RunService.RenderStepped:Connect(function()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= localPlayer and player.Character then
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			local root = player.Character:FindFirstChild("HumanoidRootPart")

			if humanoid and root then
				local tag = root:FindFirstChild("JuggernautTag")

				if humanoid.Health > 400 and not tag then
					local billboard = Instance.new("BillboardGui")
					billboard.Name = "JuggernautTag"
					billboard.Adornee = root
					billboard.Size = UDim2.new(0, 160, 0, 25)
					billboard.StudsOffset = Vector3.new(0, 2.5, 0)
					billboard.AlwaysOnTop = true
					billboard.LightInfluence = 0
					billboard.MaxDistance = 1000
					billboard.Parent = root

					local textLabel = Instance.new("TextLabel")
					textLabel.Size = UDim2.new(1, 0, 1, 0)
					textLabel.BackgroundTransparency = 1
					textLabel.Text = "JUGGERNAUT"
					textLabel.TextColor3 = Color3.new(1, 1, 1)
					textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
					textLabel.TextStrokeTransparency = 0
					textLabel.TextScaled = true
					textLabel.Font = Enum.Font.Arcade
					textLabel.Parent = billboard

					local highlight = Instance.new("Highlight")
					highlight.Name = "JuggernautESP"
					highlight.Adornee = player.Character
					highlight.FillTransparency = 1
					highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
					highlight.OutlineTransparency = 0
					highlight.Parent = game.CoreGui
				end
			end
		end
	end
end)
end)

juggtab:Button("Pack-A-Punch (LEGIT, Req. 100 Points)", function()
local p = game.Players.LocalPlayer
local c = p.Character or p.CharacterAdded:Wait()
local vim = game:GetService("VirtualInputManager")

c:PivotTo(CFrame.new(111, 317, 73))

task.delay(0.2, function()
	vim:SendKeyEvent(true, Enum.KeyCode.E, false, game)
	vim:SendKeyEvent(false, Enum.KeyCode.E, false, game)

	task.delay(0.1, function()
		c:PivotTo(CFrame.new(112, 317, 42))
	end)
end)
end)

juggtab:Button("Remove Doors (Client)", function()
for _, obj in pairs(game:GetService("Workspace"):GetDescendants()) do
    if obj.Name == "Door" then
        obj:Destroy()
    end
end
end)

local gunPositions = {
	["raygun"] = Vector3.new(114, 335, 569),
	["landmine"] = Vector3.new(243, 313, 332),
	["mp5k"] = Vector3.new(232, 373, 47),
	["awp"] = Vector3.new(466, 313, 756),
	["m4a1"] = Vector3.new(-154, 303, 703),
	["r870"] = Vector3.new(20, 292, 241),
	["freezegun"] = Vector3.new(307, 333, 709),
	["desert eagle"] = Vector3.new(171, 260, 406),
	["m14"] = Vector3.new(184, 314, 379),
	["mg42"] = Vector3.new(22, 313, 371),
	["svd"] = Vector3.new(159, 333, 445),
	["db shotgun"] = Vector3.new(106, 272, 101),
	["energy can"] = Vector3.new(173, 333, 587),
	["m16a2"] = Vector3.new(71, 282, 31),
	["m1911"] = Vector3.new(340, 313, 370)
}

endtab:Textbox("Gun Grabber (Legit, Requires Points!)", function(v)
	local Players = game:GetService("Players")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	local Workspace = game:GetService("Workspace")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local camera = Workspace.CurrentCamera

	local gunOrigin = humanoidRootPart.Position

	local function findGunModel(name)
		local weapons = Workspace:FindFirstChild("Weapons")
		if not weapons then return nil end
		for _, child in ipairs(weapons:GetChildren()) do
			if child:IsA("Model") and child.Name:lower() == name:lower() then
				return child
			end
		end
		return nil
	end

	local function getGunPart(model)
		if not model then return nil end
		for _, d in ipairs(model:GetDescendants()) do
			if d:IsA("BasePart") then
				return d
			end
		end
		return nil
	end

	local function runGunSequence(gunPart, position)
		if not gunPart then return end
		humanoidRootPart.CFrame = CFrame.new(position)
		camera.CFrame = CFrame.new(camera.CFrame.Position, gunPart.Position)
		task.wait(0.1)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
		task.wait(0.75)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
		humanoidRootPart.CFrame = CFrame.new(gunOrigin)
	end

	local input = v:lower()
	local gunModel = findGunModel(input)
	local gunPart = getGunPart(gunModel)
	local gunPos = gunPositions[input]

	if gunModel and gunPart and gunPos then
		runGunSequence(gunPart, gunPos)
	else
		warn("Gun \"" .. v .. "\" not found or missing position.")
	end
end)

endtab:Button("Remove Doors (Client)", function()
for _, obj in pairs(game:GetService("Workspace"):GetDescendants()) do
    if obj.Name == "Door" then
        obj:Destroy()
    end
end
end)

endtab:Button("Kill All NPCs", function()
local Workspace = game:GetService("Workspace")

local killersFolder = Workspace:FindFirstChild("Killers")
if killersFolder then
	for _, obj in ipairs(killersFolder:GetDescendants()) do
		if obj:IsA("Humanoid") and obj.Health > 0 then
			obj.Health = 0
		end
	end
end
end)

misctab:Button("Infinite Yield", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

misctab:Button("Shutdown Game", function()
game:Shutdown()
end)

misctab:Button("Switch Servers", function()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
    local body = HttpService:JSONDecode(req)

    if body and body.data then
        for i, v in next, body.data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                table.insert(servers, 1, v.id)
            end
        end
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
end
end)

helptab:Button("Copy Owner Discord Username", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Username",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("ghostofcelleron")
end)

helptab:Button("Copy Discord Server Invite", function()
local StarterGui = game:GetService("StarterGui")

StarterGui:SetCore("SendNotification", {
    Title = "Discord Invite",
    Text = "Copied to your clipboard!",
    Duration = 3,
    Button1 = "alright fella",
})
setclipboard("https://discord.gg/8stFYxJv4R")
end)
